{"ast":null,"code":"var _jsxFileName = \"/Users/satwikmohanty/IdeaProjects/vaccination-ui/src/components/Dashboard.js\";\n//import React, { useState, useEffect } from 'react';\n//import { useNavigate } from 'react-router-dom';\n//import NavigationMenu from './NavigationMenu';\n//import axios from '../api/axios';\n//\n//const Dashboard = ({ token }) => {\n//  const [data, setData] = useState(null);\n//  const [loading, setLoading] = useState(true);\n//  const [error, setError] = useState(null);\n//  const [editingDrive, setEditingDrive] = useState(null);\n//  const [updatedDrive, setUpdatedDrive] = useState({\n//    identifier: '',\n//    name: '',\n//    title: '',\n//    scheduledDate: '',\n//    location: '',\n//    availableDozes: '',\n//    applicableClasses: []\n//  });\n//\n//  useEffect(() => {\n//    if (!token) {\n//      setLoading(false);\n//      return;\n//    }\n//\n//    const fetchDashboard = async () => {\n//      setLoading(true);\n//      setError(null);\n//      try {\n//        const res = await axios.post(\n//          '/dashboard/overview',\n//          {},\n//          { headers: { Authorization: `Bearer ${token}` } }\n//        );\n//        setData(res.data);\n//      } catch (e) {\n//        console.error(e);\n//        setError('Failed to load dashboard data.');\n//      } finally {\n//        setLoading(false);\n//      }\n//    };\n//\n//    fetchDashboard();\n//  }, [token]);\n//\n//  const handleEditClick = (drive) => {\n//    setEditingDrive(drive);\n//    setUpdatedDrive({\n//      identifier: drive.identifier,\n//      name: drive.name,\n//      title: drive.title,\n//      scheduledDate: new Date(drive.scheduledDate).toISOString().slice(0, 16),\n//      location: drive.location,\n//      availableDozes: drive.availableDozes,\n//      applicableClasses: drive.applicableClasses\n//    });\n//  };\n//\n//  const handleInputChange = (e) => {\n//    const { name, value } = e.target;\n//    if (name === 'applicableClasses') {\n//      setUpdatedDrive((prev) => ({\n//        ...prev,\n//        applicableClasses: value.split(',').map(cls => cls.trim())\n//      }));\n//    } else {\n//      setUpdatedDrive((prev) => ({ ...prev, [name]: value }));\n//    }\n//  };\n//\n//  const handleSubmit = async (e) => {\n//    e.preventDefault();\n//    try {\n//      await axios.put(\n//        `/vaccine-drive/update/${editingDrive.identifier}`,\n//        updatedDrive,\n//        { headers: { Authorization: `Bearer ${token}` } }\n//      );\n//      const updatedList = data.vaccinationDriveList.map((drive) =>\n//        drive.id === editingDrive.id ? { ...drive, ...updatedDrive } : drive\n//      );\n//      setData((prev) => ({ ...prev, vaccinationDriveList: updatedList }));\n//      setEditingDrive(null);\n//    } catch (e) {\n//      console.error(e);\n//      setError('Failed to update vaccination drive.');\n//    }\n//  };\n//\n//  const styles = {\n//    container: { maxWidth: '900px', margin: '2rem auto', padding: '1.5rem', backgroundColor: '#fafafa', borderRadius: '8px', border: '1px solid #ddd' },\n//    header: { textAlign: 'center', marginBottom: '2rem' },\n//    statContainer: { display: 'flex', justifyContent: 'space-between', marginBottom: '2rem' },\n//    statBox: { flex: '1', margin: '0 0.5rem', padding: '1rem', borderRadius: '8px', backgroundColor: 'white', border: '1px solid #ccc', textAlign: 'center' },\n//    table: { width: '100%', borderCollapse: 'collapse', marginTop: '1rem' },\n//    th: { border: '1px solid #ccc', padding: '10px', backgroundColor: '#f0f0f0', textAlign: 'left' },\n//    td: { border: '1px solid #ccc', padding: '10px' },\n//    button: { backgroundColor: '#007bff', color: 'white', padding: '8px 12px', border: 'none', cursor: 'pointer', borderRadius: '5px', fontWeight: 'bold' },\n//    formGroup: { marginBottom: '1rem' },\n//    input: { width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ccc', marginTop: '4px' }\n//  };\n//\n//  return (\n//    <div style={styles.container}>\n//      <NavigationMenu onNavigate={() => {}} />\n//      <h2 style={styles.header}>Dashboard Analytics</h2>\n//\n//      {loading && <p>Loading dashboard data...</p>}\n//      {error && <p style={{ color: 'red' }}>{error}</p>}\n//\n//      {data && (\n//        <>\n//          <div style={styles.statContainer}>\n//            <div style={styles.statBox}>\n//              <h3>Total Students</h3>\n//              <p>{data.totalStudents}</p>\n//            </div>\n//            <div style={styles.statBox}>\n//              <h3>Vaccinated Students</h3>\n//              <p>{data.vaccinatedStudents}</p>\n//            </div>\n//            <div style={styles.statBox}>\n//              <h3>Vaccinated Percentage</h3>\n//              <p>{data.vaccinatedPercentage}%</p>\n//            </div>\n//          </div>\n//\n//          <h3>Upcoming Vaccination Drives</h3>\n//          {data.vaccinationDriveList.length > 0 ? (\n//            <table style={styles.table}>\n//              <thead>\n//                <tr>\n//                  <th style={styles.th}>Drive Identifier</th>\n//                  <th style={styles.th}>Title</th>\n//                  <th style={styles.th}>Scheduled Date</th>\n//                  <th style={styles.th}>Location</th>\n//                  <th style={styles.th}>Available Doses</th>\n//                  <th style={styles.th}>Applicable Classes</th>\n//                  <th style={styles.th}>Edit</th>\n//                </tr>\n//              </thead>\n//              <tbody>\n//                {data.vaccinationDriveList.map((drive) => (\n//                  <tr key={drive.id}>\n//                    <td style={styles.td}>{drive.driveIdentifier}</td>\n//                    <td style={styles.td}>{drive.title}</td>\n//                    <td style={styles.td}>{new Date(drive.scheduledDate).toLocaleString()}</td>\n//                    <td style={styles.td}>{drive.location}</td>\n//                    <td style={styles.td}>{drive.availableDozes}</td>\n//                    <td style={styles.td}>{drive.applicableClasses.join(', ')}</td>\n//                    <td style={styles.td}>\n//                      <button style={styles.button} onClick={() => handleEditClick(drive)}>\n//                        Edit\n//                      </button>\n//                    </td>\n//                  </tr>\n//                ))}\n//              </tbody>\n//            </table>\n//          ) : (\n//            <p style={{ textAlign: 'center', marginTop: '1rem' }}>No vaccination drives available.</p>\n//          )}\n//        </>\n//      )}\n//\n//      {/* Edit Form */}\n//      {editingDrive && (\n//        <div style={{ marginTop: '2rem' }}>\n//          <h3>Edit Vaccination Drive</h3>\n//          <form onSubmit={handleSubmit}>\n//          <div style={styles.formGroup}>\n//                                  <label>Identifier</label>\n//                                  <input\n//                                    type=\"text\"\n//                                    name=\"identifier\"\n//                                    value={updatedDrive.identifier}\n//                                    onChange={handleInputChange}\n//                                    style={styles.input}\n//                                    required\n//             />\n//          </div>\n//          <div style={styles.formGroup}>\n//                        <label>Name</label>\n//                        <input\n//                          type=\"text\"\n//                          name=\"name\"\n//                          value={updatedDrive.name}\n//                          onChange={handleInputChange}\n//                          style={styles.input}\n//                          required\n//               />\n//            </div>\n//            <div style={styles.formGroup}>\n//              <label>Title</label>\n//              <input\n//                type=\"text\"\n//                name=\"title\"\n//                value={updatedDrive.title}\n//                onChange={handleInputChange}\n//                style={styles.input}\n//                required\n//              />\n//            </div>\n//            <div style={styles.formGroup}>\n//              <label>Scheduled Date</label>\n//              <input\n//                type=\"datetime-local\"\n//                name=\"scheduledDate\"\n//                value={updatedDrive.scheduledDate}\n//                onChange={handleInputChange}\n//                style={styles.input}\n//                required\n//              />\n//            </div>\n//            <div style={styles.formGroup}>\n//              <label>Location</label>\n//              <input\n//                type=\"text\"\n//                name=\"location\"\n//                value={updatedDrive.location}\n//                onChange={handleInputChange}\n//                style={styles.input}\n//                required\n//              />\n//            </div>\n//            <div style={styles.formGroup}>\n//              <label>Available Doses</label>\n//              <input\n//                type=\"number\"\n//                name=\"availableDozes\"\n//                value={updatedDrive.availableDozes}\n//                onChange={handleInputChange}\n//                style={styles.input}\n//                required\n//              />\n//            </div>\n//            <div style={styles.formGroup}>\n//              <label>Applicable Classes (comma-separated)</label>\n//              <input\n//                type=\"text\"\n//                name=\"applicableClasses\"\n//                value={updatedDrive.applicableClasses.join(', ')}\n//                onChange={handleInputChange}\n//                style={styles.input}\n//                required\n//              />\n//            </div>\n//            <button type=\"submit\" style={styles.button}>Update Drive</button>\n//          </form>\n//        </div>\n//      )}\n//    </div>\n//  );\n//};\n//\n//export default Dashboard;\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport NavigationMenu from './NavigationMenu';\nimport axios from '../api/axios';\nconst Dashboard = ({\n  token\n}) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [editingDrive, setEditingDrive] = useState(null);\n  const [updatedDrive, setUpdatedDrive] = useState({\n    identifier: '',\n    name: '',\n    title: '',\n    scheduledDate: '',\n    location: '',\n    availableDozes: '',\n    applicableClasses: []\n  });\n  useEffect(() => {\n    if (!token) {\n      setLoading(false);\n      return;\n    }\n    const fetchDashboard = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const res = await axios.post('/dashboard/overview', {}, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setData(res.data);\n      } catch (e) {\n        console.error(e);\n        setError('Failed to load dashboard data.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDashboard();\n  }, [token]);\n  const handleEditClick = drive => {\n    setEditingDrive(drive);\n    setUpdatedDrive({\n      identifier: drive.identifier,\n      name: drive.name,\n      title: drive.title,\n      scheduledDate: new Date(drive.scheduledDate).toISOString().slice(0, 16),\n      location: drive.location,\n      availableDozes: drive.availableDozes,\n      applicableClasses: drive.applicableClasses\n    });\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'applicableClasses') {\n      setUpdatedDrive(prev => ({\n        ...prev,\n        applicableClasses: value.split(',').map(cls => cls.trim())\n      }));\n    } else {\n      setUpdatedDrive(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.put(`/vaccine-drive/update/${editingDrive.identifier}`, updatedDrive, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const updatedList = data.vaccinationDriveList.map(drive => drive.id === editingDrive.id ? {\n        ...drive,\n        ...updatedDrive\n      } : drive);\n      setData(prev => ({\n        ...prev,\n        vaccinationDriveList: updatedList\n      }));\n      setEditingDrive(null);\n    } catch (e) {\n      console.error(e);\n      setError('Failed to update vaccination drive.');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mx-auto p-6 bg-blue-50 rounded-lg shadow-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NavigationMenu, {\n    onNavigate: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-2xl font-bold text-center text-gray-800 mb-6 bg-blue-100 p-4 rounded-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }\n  }, \"Dashboard Analytics\"), loading && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center text-gray-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 19\n    }\n  }, \"Loading dashboard data...\"), error && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center text-red-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 17\n    }\n  }, error), data && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid grid-cols-1 sm:grid-cols-3 gap-4 mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-white p-4 rounded-lg shadow-sm text-center bg-green-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-lg font-semibold text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 15\n    }\n  }, \"Total Students\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-2xl text-gray-900\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 15\n    }\n  }, data.totalStudents)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-white p-4 rounded-lg shadow-sm text-center bg-yellow-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-lg font-semibold text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 15\n    }\n  }, \"Vaccinated Students\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-2xl text-gray-900\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 15\n    }\n  }, data.vaccinatedStudents)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-white p-4 rounded-lg shadow-sm text-center bg-purple-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-lg font-semibold text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 15\n    }\n  }, \"Vaccinated Percentage\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-2xl text-gray-900\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 15\n    }\n  }, data.vaccinatedPercentage, \"%\"))), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-xl font-semibold text-gray-800 mb-4 bg-blue-200 p-3 rounded-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 11\n    }\n  }, \"Upcoming Vaccination Drives\"), data.vaccinationDriveList.length > 0 ? /*#__PURE__*/React.createElement(\"table\", {\n    className: \"min-w-full table-auto bg-white rounded-lg shadow-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"bg-gray-100 text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"px-6 py-3 text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 19\n    }\n  }, \"Drive Identifier\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"px-6 py-3 text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 19\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"px-6 py-3 text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 19\n    }\n  }, \"Scheduled Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"px-6 py-3 text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 19\n    }\n  }, \"Location\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"px-6 py-3 text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 19\n    }\n  }, \"Available Doses\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"px-6 py-3 text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 19\n    }\n  }, \"Applicable Classes\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"px-6 py-3 text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 19\n    }\n  }, \"Edit\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 15\n    }\n  }, data.vaccinationDriveList.map(drive => /*#__PURE__*/React.createElement(\"tr\", {\n    key: drive.id,\n    className: \"border-b hover:bg-gray-50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"px-6 py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 21\n    }\n  }, drive.driveIdentifier), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"px-6 py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 21\n    }\n  }, drive.title), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"px-6 py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 21\n    }\n  }, new Date(drive.scheduledDate).toLocaleString()), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"px-6 py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 21\n    }\n  }, drive.location), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"px-6 py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 21\n    }\n  }, drive.availableDozes), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"px-6 py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 21\n    }\n  }, drive.applicableClasses.join(', ')), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"px-6 py-4 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-600\",\n    onClick: () => handleEditClick(drive),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 23\n    }\n  }, \"Edit\")))))) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center text-gray-600 mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 13\n    }\n  }, \"No vaccination drives available.\")), editingDrive && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-8 bg-blue-50 p-6 rounded-lg shadow-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-xl font-semibold text-gray-800 mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 11\n    }\n  }, \"Edit Vaccination Drive\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"space-y-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 15\n    }\n  }, \"Identifier\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"identifier\",\n    value: updatedDrive.identifier,\n    onChange: handleInputChange,\n    className: \"w-full p-3 border border-gray-300 rounded-lg mt-2\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 15\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: updatedDrive.name,\n    onChange: handleInputChange,\n    className: \"w-full p-3 border border-gray-300 rounded-lg mt-2\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 15\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    value: updatedDrive.title,\n    onChange: handleInputChange,\n    className: \"w-full p-3 border border-gray-300 rounded-lg mt-2\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 15\n    }\n  }, \"Scheduled Date\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"datetime-local\",\n    name: \"scheduledDate\",\n    value: updatedDrive.scheduledDate,\n    onChange: handleInputChange,\n    className: \"w-full p-3 border border-gray-300 rounded-lg mt-2\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 15\n    }\n  }, \"Location\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"location\",\n    value: updatedDrive.location,\n    onChange: handleInputChange,\n    className: \"w-full p-3 border border-gray-300 rounded-lg mt-2\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 15\n    }\n  }, \"Available Doses\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"availableDozes\",\n    value: updatedDrive.availableDozes,\n    onChange: handleInputChange,\n    className: \"w-full p-3 border border-gray-300 rounded-lg mt-2\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 15\n    }\n  }, \"Applicable Classes (comma-separated)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"applicableClasses\",\n    value: updatedDrive.applicableClasses.join(', '),\n    onChange: handleInputChange,\n    className: \"w-full p-3 border border-gray-300 rounded-lg mt-2\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"w-full py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 13\n    }\n  }, \"Update Drive\"))));\n};\nexport default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","NavigationMenu","axios","Dashboard","token","data","setData","loading","setLoading","error","setError","editingDrive","setEditingDrive","updatedDrive","setUpdatedDrive","identifier","name","title","scheduledDate","location","availableDozes","applicableClasses","fetchDashboard","res","post","headers","Authorization","e","console","handleEditClick","drive","Date","toISOString","slice","handleInputChange","value","target","prev","split","map","cls","trim","handleSubmit","preventDefault","put","updatedList","vaccinationDriveList","id","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onNavigate","Fragment","totalStudents","vaccinatedStudents","vaccinatedPercentage","length","key","driveIdentifier","toLocaleString","join","onClick","onSubmit","type","onChange","required"],"sources":["/Users/satwikmohanty/IdeaProjects/vaccination-ui/src/components/Dashboard.js"],"sourcesContent":["//import React, { useState, useEffect } from 'react';\n//import { useNavigate } from 'react-router-dom';\n//import NavigationMenu from './NavigationMenu';\n//import axios from '../api/axios';\n//\n//const Dashboard = ({ token }) => {\n//  const [data, setData] = useState(null);\n//  const [loading, setLoading] = useState(true);\n//  const [error, setError] = useState(null);\n//  const [editingDrive, setEditingDrive] = useState(null);\n//  const [updatedDrive, setUpdatedDrive] = useState({\n//    identifier: '',\n//    name: '',\n//    title: '',\n//    scheduledDate: '',\n//    location: '',\n//    availableDozes: '',\n//    applicableClasses: []\n//  });\n//\n//  useEffect(() => {\n//    if (!token) {\n//      setLoading(false);\n//      return;\n//    }\n//\n//    const fetchDashboard = async () => {\n//      setLoading(true);\n//      setError(null);\n//      try {\n//        const res = await axios.post(\n//          '/dashboard/overview',\n//          {},\n//          { headers: { Authorization: `Bearer ${token}` } }\n//        );\n//        setData(res.data);\n//      } catch (e) {\n//        console.error(e);\n//        setError('Failed to load dashboard data.');\n//      } finally {\n//        setLoading(false);\n//      }\n//    };\n//\n//    fetchDashboard();\n//  }, [token]);\n//\n//  const handleEditClick = (drive) => {\n//    setEditingDrive(drive);\n//    setUpdatedDrive({\n//      identifier: drive.identifier,\n//      name: drive.name,\n//      title: drive.title,\n//      scheduledDate: new Date(drive.scheduledDate).toISOString().slice(0, 16),\n//      location: drive.location,\n//      availableDozes: drive.availableDozes,\n//      applicableClasses: drive.applicableClasses\n//    });\n//  };\n//\n//  const handleInputChange = (e) => {\n//    const { name, value } = e.target;\n//    if (name === 'applicableClasses') {\n//      setUpdatedDrive((prev) => ({\n//        ...prev,\n//        applicableClasses: value.split(',').map(cls => cls.trim())\n//      }));\n//    } else {\n//      setUpdatedDrive((prev) => ({ ...prev, [name]: value }));\n//    }\n//  };\n//\n//  const handleSubmit = async (e) => {\n//    e.preventDefault();\n//    try {\n//      await axios.put(\n//        `/vaccine-drive/update/${editingDrive.identifier}`,\n//        updatedDrive,\n//        { headers: { Authorization: `Bearer ${token}` } }\n//      );\n//      const updatedList = data.vaccinationDriveList.map((drive) =>\n//        drive.id === editingDrive.id ? { ...drive, ...updatedDrive } : drive\n//      );\n//      setData((prev) => ({ ...prev, vaccinationDriveList: updatedList }));\n//      setEditingDrive(null);\n//    } catch (e) {\n//      console.error(e);\n//      setError('Failed to update vaccination drive.');\n//    }\n//  };\n//\n//  const styles = {\n//    container: { maxWidth: '900px', margin: '2rem auto', padding: '1.5rem', backgroundColor: '#fafafa', borderRadius: '8px', border: '1px solid #ddd' },\n//    header: { textAlign: 'center', marginBottom: '2rem' },\n//    statContainer: { display: 'flex', justifyContent: 'space-between', marginBottom: '2rem' },\n//    statBox: { flex: '1', margin: '0 0.5rem', padding: '1rem', borderRadius: '8px', backgroundColor: 'white', border: '1px solid #ccc', textAlign: 'center' },\n//    table: { width: '100%', borderCollapse: 'collapse', marginTop: '1rem' },\n//    th: { border: '1px solid #ccc', padding: '10px', backgroundColor: '#f0f0f0', textAlign: 'left' },\n//    td: { border: '1px solid #ccc', padding: '10px' },\n//    button: { backgroundColor: '#007bff', color: 'white', padding: '8px 12px', border: 'none', cursor: 'pointer', borderRadius: '5px', fontWeight: 'bold' },\n//    formGroup: { marginBottom: '1rem' },\n//    input: { width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ccc', marginTop: '4px' }\n//  };\n//\n//  return (\n//    <div style={styles.container}>\n//      <NavigationMenu onNavigate={() => {}} />\n//      <h2 style={styles.header}>Dashboard Analytics</h2>\n//\n//      {loading && <p>Loading dashboard data...</p>}\n//      {error && <p style={{ color: 'red' }}>{error}</p>}\n//\n//      {data && (\n//        <>\n//          <div style={styles.statContainer}>\n//            <div style={styles.statBox}>\n//              <h3>Total Students</h3>\n//              <p>{data.totalStudents}</p>\n//            </div>\n//            <div style={styles.statBox}>\n//              <h3>Vaccinated Students</h3>\n//              <p>{data.vaccinatedStudents}</p>\n//            </div>\n//            <div style={styles.statBox}>\n//              <h3>Vaccinated Percentage</h3>\n//              <p>{data.vaccinatedPercentage}%</p>\n//            </div>\n//          </div>\n//\n//          <h3>Upcoming Vaccination Drives</h3>\n//          {data.vaccinationDriveList.length > 0 ? (\n//            <table style={styles.table}>\n//              <thead>\n//                <tr>\n//                  <th style={styles.th}>Drive Identifier</th>\n//                  <th style={styles.th}>Title</th>\n//                  <th style={styles.th}>Scheduled Date</th>\n//                  <th style={styles.th}>Location</th>\n//                  <th style={styles.th}>Available Doses</th>\n//                  <th style={styles.th}>Applicable Classes</th>\n//                  <th style={styles.th}>Edit</th>\n//                </tr>\n//              </thead>\n//              <tbody>\n//                {data.vaccinationDriveList.map((drive) => (\n//                  <tr key={drive.id}>\n//                    <td style={styles.td}>{drive.driveIdentifier}</td>\n//                    <td style={styles.td}>{drive.title}</td>\n//                    <td style={styles.td}>{new Date(drive.scheduledDate).toLocaleString()}</td>\n//                    <td style={styles.td}>{drive.location}</td>\n//                    <td style={styles.td}>{drive.availableDozes}</td>\n//                    <td style={styles.td}>{drive.applicableClasses.join(', ')}</td>\n//                    <td style={styles.td}>\n//                      <button style={styles.button} onClick={() => handleEditClick(drive)}>\n//                        Edit\n//                      </button>\n//                    </td>\n//                  </tr>\n//                ))}\n//              </tbody>\n//            </table>\n//          ) : (\n//            <p style={{ textAlign: 'center', marginTop: '1rem' }}>No vaccination drives available.</p>\n//          )}\n//        </>\n//      )}\n//\n//      {/* Edit Form */}\n//      {editingDrive && (\n//        <div style={{ marginTop: '2rem' }}>\n//          <h3>Edit Vaccination Drive</h3>\n//          <form onSubmit={handleSubmit}>\n//          <div style={styles.formGroup}>\n//                                  <label>Identifier</label>\n//                                  <input\n//                                    type=\"text\"\n//                                    name=\"identifier\"\n//                                    value={updatedDrive.identifier}\n//                                    onChange={handleInputChange}\n//                                    style={styles.input}\n//                                    required\n//             />\n//          </div>\n//          <div style={styles.formGroup}>\n//                        <label>Name</label>\n//                        <input\n//                          type=\"text\"\n//                          name=\"name\"\n//                          value={updatedDrive.name}\n//                          onChange={handleInputChange}\n//                          style={styles.input}\n//                          required\n//               />\n//            </div>\n//            <div style={styles.formGroup}>\n//              <label>Title</label>\n//              <input\n//                type=\"text\"\n//                name=\"title\"\n//                value={updatedDrive.title}\n//                onChange={handleInputChange}\n//                style={styles.input}\n//                required\n//              />\n//            </div>\n//            <div style={styles.formGroup}>\n//              <label>Scheduled Date</label>\n//              <input\n//                type=\"datetime-local\"\n//                name=\"scheduledDate\"\n//                value={updatedDrive.scheduledDate}\n//                onChange={handleInputChange}\n//                style={styles.input}\n//                required\n//              />\n//            </div>\n//            <div style={styles.formGroup}>\n//              <label>Location</label>\n//              <input\n//                type=\"text\"\n//                name=\"location\"\n//                value={updatedDrive.location}\n//                onChange={handleInputChange}\n//                style={styles.input}\n//                required\n//              />\n//            </div>\n//            <div style={styles.formGroup}>\n//              <label>Available Doses</label>\n//              <input\n//                type=\"number\"\n//                name=\"availableDozes\"\n//                value={updatedDrive.availableDozes}\n//                onChange={handleInputChange}\n//                style={styles.input}\n//                required\n//              />\n//            </div>\n//            <div style={styles.formGroup}>\n//              <label>Applicable Classes (comma-separated)</label>\n//              <input\n//                type=\"text\"\n//                name=\"applicableClasses\"\n//                value={updatedDrive.applicableClasses.join(', ')}\n//                onChange={handleInputChange}\n//                style={styles.input}\n//                required\n//              />\n//            </div>\n//            <button type=\"submit\" style={styles.button}>Update Drive</button>\n//          </form>\n//        </div>\n//      )}\n//    </div>\n//  );\n//};\n//\n//export default Dashboard;\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport NavigationMenu from './NavigationMenu';\nimport axios from '../api/axios';\n\nconst Dashboard = ({ token }) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [editingDrive, setEditingDrive] = useState(null);\n  const [updatedDrive, setUpdatedDrive] = useState({\n    identifier: '',\n    name: '',\n    title: '',\n    scheduledDate: '',\n    location: '',\n    availableDozes: '',\n    applicableClasses: []\n  });\n\n  useEffect(() => {\n    if (!token) {\n      setLoading(false);\n      return;\n    }\n\n    const fetchDashboard = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const res = await axios.post(\n          '/dashboard/overview',\n          {},\n          { headers: { Authorization: `Bearer ${token}` } }\n        );\n        setData(res.data);\n      } catch (e) {\n        console.error(e);\n        setError('Failed to load dashboard data.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchDashboard();\n  }, [token]);\n\n  const handleEditClick = (drive) => {\n    setEditingDrive(drive);\n    setUpdatedDrive({\n      identifier: drive.identifier,\n      name: drive.name,\n      title: drive.title,\n      scheduledDate: new Date(drive.scheduledDate).toISOString().slice(0, 16),\n      location: drive.location,\n      availableDozes: drive.availableDozes,\n      applicableClasses: drive.applicableClasses\n    });\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    if (name === 'applicableClasses') {\n      setUpdatedDrive((prev) => ({\n        ...prev,\n        applicableClasses: value.split(',').map(cls => cls.trim())\n      }));\n    } else {\n      setUpdatedDrive((prev) => ({ ...prev, [name]: value }));\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await axios.put(\n        `/vaccine-drive/update/${editingDrive.identifier}`,\n        updatedDrive,\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      const updatedList = data.vaccinationDriveList.map((drive) =>\n        drive.id === editingDrive.id ? { ...drive, ...updatedDrive } : drive\n      );\n      setData((prev) => ({ ...prev, vaccinationDriveList: updatedList }));\n      setEditingDrive(null);\n    } catch (e) {\n      console.error(e);\n      setError('Failed to update vaccination drive.');\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto p-6 bg-blue-50 rounded-lg shadow-md\">\n      <NavigationMenu onNavigate={() => {}} />\n      <h2 className=\"text-2xl font-bold text-center text-gray-800 mb-6 bg-blue-100 p-4 rounded-lg\">Dashboard Analytics</h2>\n\n      {loading && <p className=\"text-center text-gray-600\">Loading dashboard data...</p>}\n      {error && <p className=\"text-center text-red-500\">{error}</p>}\n\n      {data && (\n        <>\n          <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 mb-6\">\n            <div className=\"bg-white p-4 rounded-lg shadow-sm text-center bg-green-100\">\n              <h3 className=\"text-lg font-semibold text-gray-700\">Total Students</h3>\n              <p className=\"text-2xl text-gray-900\">{data.totalStudents}</p>\n            </div>\n            <div className=\"bg-white p-4 rounded-lg shadow-sm text-center bg-yellow-100\">\n              <h3 className=\"text-lg font-semibold text-gray-700\">Vaccinated Students</h3>\n              <p className=\"text-2xl text-gray-900\">{data.vaccinatedStudents}</p>\n            </div>\n            <div className=\"bg-white p-4 rounded-lg shadow-sm text-center bg-purple-100\">\n              <h3 className=\"text-lg font-semibold text-gray-700\">Vaccinated Percentage</h3>\n              <p className=\"text-2xl text-gray-900\">{data.vaccinatedPercentage}%</p>\n            </div>\n          </div>\n\n          <h3 className=\"text-xl font-semibold text-gray-800 mb-4 bg-blue-200 p-3 rounded-lg\">Upcoming Vaccination Drives</h3>\n          {data.vaccinationDriveList.length > 0 ? (\n            <table className=\"min-w-full table-auto bg-white rounded-lg shadow-md\">\n              <thead className=\"bg-gray-100 text-gray-700\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left\">Drive Identifier</th>\n                  <th className=\"px-6 py-3 text-left\">Title</th>\n                  <th className=\"px-6 py-3 text-left\">Scheduled Date</th>\n                  <th className=\"px-6 py-3 text-left\">Location</th>\n                  <th className=\"px-6 py-3 text-left\">Available Doses</th>\n                  <th className=\"px-6 py-3 text-left\">Applicable Classes</th>\n                  <th className=\"px-6 py-3 text-left\">Edit</th>\n                </tr>\n              </thead>\n              <tbody>\n                {data.vaccinationDriveList.map((drive) => (\n                  <tr key={drive.id} className=\"border-b hover:bg-gray-50\">\n                    <td className=\"px-6 py-4\">{drive.driveIdentifier}</td>\n                    <td className=\"px-6 py-4\">{drive.title}</td>\n                    <td className=\"px-6 py-4\">{new Date(drive.scheduledDate).toLocaleString()}</td>\n                    <td className=\"px-6 py-4\">{drive.location}</td>\n                    <td className=\"px-6 py-4\">{drive.availableDozes}</td>\n                    <td className=\"px-6 py-4\">{drive.applicableClasses.join(', ')}</td>\n                    <td className=\"px-6 py-4 text-center\">\n                      <button\n                        className=\"bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-600\"\n                        onClick={() => handleEditClick(drive)}\n                      >\n                        Edit\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          ) : (\n            <p className=\"text-center text-gray-600 mt-4\">No vaccination drives available.</p>\n          )}\n        </>\n      )}\n\n      {/* Edit Form */}\n      {editingDrive && (\n        <div className=\"mt-8 bg-blue-50 p-6 rounded-lg shadow-md\">\n          <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Edit Vaccination Drive</h3>\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div>\n              <label className=\"block text-gray-700\">Identifier</label>\n              <input\n                type=\"text\"\n                name=\"identifier\"\n                value={updatedDrive.identifier}\n                onChange={handleInputChange}\n                className=\"w-full p-3 border border-gray-300 rounded-lg mt-2\"\n                required\n              />\n            </div>\n            <div>\n              <label className=\"block text-gray-700\">Name</label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={updatedDrive.name}\n                onChange={handleInputChange}\n                className=\"w-full p-3 border border-gray-300 rounded-lg mt-2\"\n                required\n              />\n            </div>\n            <div>\n              <label className=\"block text-gray-700\">Title</label>\n              <input\n                type=\"text\"\n                name=\"title\"\n                value={updatedDrive.title}\n                onChange={handleInputChange}\n                className=\"w-full p-3 border border-gray-300 rounded-lg mt-2\"\n                required\n              />\n            </div>\n            <div>\n              <label className=\"block text-gray-700\">Scheduled Date</label>\n              <input\n                type=\"datetime-local\"\n                name=\"scheduledDate\"\n                value={updatedDrive.scheduledDate}\n                onChange={handleInputChange}\n                className=\"w-full p-3 border border-gray-300 rounded-lg mt-2\"\n                required\n              />\n            </div>\n            <div>\n              <label className=\"block text-gray-700\">Location</label>\n              <input\n                type=\"text\"\n                name=\"location\"\n                value={updatedDrive.location}\n                onChange={handleInputChange}\n                className=\"w-full p-3 border border-gray-300 rounded-lg mt-2\"\n                required\n              />\n            </div>\n            <div>\n              <label className=\"block text-gray-700\">Available Doses</label>\n              <input\n                type=\"number\"\n                name=\"availableDozes\"\n                value={updatedDrive.availableDozes}\n                onChange={handleInputChange}\n                className=\"w-full p-3 border border-gray-300 rounded-lg mt-2\"\n                required\n              />\n            </div>\n            <div>\n              <label className=\"block text-gray-700\">Applicable Classes (comma-separated)</label>\n              <input\n                type=\"text\"\n                name=\"applicableClasses\"\n                value={updatedDrive.applicableClasses.join(', ')}\n                onChange={handleInputChange}\n                className=\"w-full p-3 border border-gray-300 rounded-lg mt-2\"\n                required\n              />\n            </div>\n            <button type=\"submit\" className=\"w-full py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600\">\n              Update Drive\n            </button>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module"}