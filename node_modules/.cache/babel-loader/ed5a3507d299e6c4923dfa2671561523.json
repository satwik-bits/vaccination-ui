{"ast":null,"code":"var _jsxFileName = \"/Users/satwikmohanty/IdeaProjects/vaccination-ui/src/components/Dashboard.js\";\n//import React, { useState, useEffect } from 'react';\n//import { useNavigate } from 'react-router-dom';\n//import NavigationMenu from './NavigationMenu';\n//import axios from '../api/axios';\n//\n//const Dashboard = ({ token }) => {\n//  const [data, setData] = useState(null);\n//  const [loading, setLoading] = useState(true);\n//  const [error, setError] = useState(null);\n//  const [editingDrive, setEditingDrive] = useState(null);\n//  const [updatedDrive, setUpdatedDrive] = useState({\n//    name: '',\n//    title: '',\n//    scheduledDate: '',\n//    location: '',\n//    availableDozes: '',\n//    applicableClasses: []\n//  });\n//\n//  useEffect(() => {\n//    if (!token) {\n//      setLoading(false);\n//      return;\n//    }\n//\n//    const fetchDashboard = async () => {\n//      setLoading(true);\n//      setError(null);\n//      try {\n//        const res = await axios.post(\n//          '/dashboard/overview',\n//          {},\n//          { headers: { Authorization: `Bearer ${token}` } }\n//        );\n//        setData(res.data);\n//      } catch (e) {\n//        console.error(e);\n//        setError('Failed to load dashboard data.');\n//      } finally {\n//        setLoading(false);\n//      }\n//    };\n//\n//    fetchDashboard();\n//  }, [token]);\n//\n//  const handleEditClick = (drive) => {\n//    setEditingDrive(drive);\n//    setUpdatedDrive({\n//      title: drive.title,\n//      scheduledDate: new Date(drive.scheduledDate).toISOString().slice(0, 16),\n//      location: drive.location,\n//      availableDoses: drive.availableDoses,\n//      applicableClasses: drive.applicableClasses\n//    });\n//  };\n//\n//  const handleInputChange = (e) => {\n//    const { name, value } = e.target;\n//    if (name === 'applicableClasses') {\n//      setUpdatedDrive((prev) => ({\n//        ...prev,\n//        applicableClasses: value.split(',').map(cls => cls.trim())\n//      }));\n//    } else {\n//      setUpdatedDrive((prev) => ({ ...prev, [name]: value }));\n//    }\n//  };\n//\n//  const handleSubmit = async (e) => {\n//    e.preventDefault();\n//    try {\n//      await axios.put(\n//        `/vaccine-drive/update/${editingDrive.driveIdentifier}`,\n//        updatedDrive,\n//        { headers: { Authorization: `Bearer ${token}` } }\n//      );\n//      const updatedList = data.vaccinationDriveList.map((drive) =>\n//        drive.id === editingDrive.id ? { ...drive, ...updatedDrive } : drive\n//      );\n//      setData((prev) => ({ ...prev, vaccinationDriveList: updatedList }));\n//      setEditingDrive(null);\n//    } catch (e) {\n//      console.error(e);\n//      setError('Failed to update vaccination drive.');\n//    }\n//  };\n//\n//  const styles = {\n//    container: { maxWidth: '900px', margin: '2rem auto', padding: '1.5rem', backgroundColor: '#fafafa', borderRadius: '8px', border: '1px solid #ddd' },\n//    header: { textAlign: 'center', marginBottom: '2rem' },\n//    statContainer: { display: 'flex', justifyContent: 'space-between', marginBottom: '2rem' },\n//    statBox: { flex: '1', margin: '0 0.5rem', padding: '1rem', borderRadius: '8px', backgroundColor: 'white', border: '1px solid #ccc', textAlign: 'center' },\n//    table: { width: '100%', borderCollapse: 'collapse', marginTop: '1rem' },\n//    th: { border: '1px solid #ccc', padding: '10px', backgroundColor: '#f0f0f0', textAlign: 'left' },\n//    td: { border: '1px solid #ccc', padding: '10px' },\n//    button: { backgroundColor: '#007bff', color: 'white', padding: '8px 12px', border: 'none', cursor: 'pointer', borderRadius: '5px', fontWeight: 'bold' },\n//    formGroup: { marginBottom: '1rem' },\n//    input: { width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ccc', marginTop: '4px' }\n//  };\n//\n//  return (\n//    <div style={styles.container}>\n//      <NavigationMenu onNavigate={() => {}} />\n//      <h2 style={styles.header}>Dashboard Analytics</h2>\n//\n//      {loading && <p>Loading dashboard data...</p>}\n//      {error && <p style={{ color: 'red' }}>{error}</p>}\n//\n//      {data && (\n//        <>\n//          <div style={styles.statContainer}>\n//            <div style={styles.statBox}>\n//              <h3>Total Students</h3>\n//              <p>{data.totalStudents}</p>\n//            </div>\n//            <div style={styles.statBox}>\n//              <h3>Vaccinated Students</h3>\n//              <p>{data.vaccinatedStudents}</p>\n//            </div>\n//            <div style={styles.statBox}>\n//              <h3>Vaccinated Percentage</h3>\n//              <p>{data.vaccinatedPercentage}%</p>\n//            </div>\n//          </div>\n//\n//          <h3>Upcoming Vaccination Drives</h3>\n//          {data.vaccinationDriveList.length > 0 ? (\n//            <table style={styles.table}>\n//              <thead>\n//                <tr>\n//                  <th style={styles.th}>Drive Identifier</th>\n//                  <th style={styles.th}>Title</th>\n//                  <th style={styles.th}>Scheduled Date</th>\n//                  <th style={styles.th}>Location</th>\n//                  <th style={styles.th}>Available Doses</th>\n//                  <th style={styles.th}>Applicable Classes</th>\n//                  <th style={styles.th}>Edit</th>\n//                </tr>\n//              </thead>\n//              <tbody>\n//                {data.vaccinationDriveList.map((drive) => (\n//                  <tr key={drive.id}>\n//                    <td style={styles.td}>{drive.driveIdentifier}</td>\n//                    <td style={styles.td}>{drive.title}</td>\n//                    <td style={styles.td}>{new Date(drive.scheduledDate).toLocaleString()}</td>\n//                    <td style={styles.td}>{drive.location}</td>\n//                    <td style={styles.td}>{drive.availableDozes}</td>\n//                    <td style={styles.td}>{drive.applicableClasses.join(', ')}</td>\n//                    <td style={styles.td}>\n//                      <button style={styles.button} onClick={() => handleEditClick(drive)}>\n//                        Edit\n//                      </button>\n//                    </td>\n//                  </tr>\n//                ))}\n//              </tbody>\n//            </table>\n//          ) : (\n//            <p style={{ textAlign: 'center', marginTop: '1rem' }}>No vaccination drives available.</p>\n//          )}\n//        </>\n//      )}\n//\n//      {/* Edit Form */}\n//      {editingDrive && (\n//        <div style={{ marginTop: '2rem' }}>\n//          <h3>Edit Vaccination Drive</h3>\n//          <form onSubmit={handleSubmit}>\n//            <div style={styles.formGroup}>\n//              <label>Title</label>\n//              <input\n//                type=\"text\"\n//                name=\"title\"\n//                value={updatedDrive.title}\n//                onChange={handleInputChange}\n//                style={styles.input}\n//                required\n//              />\n//            </div>\n//            <div style={styles.formGroup}>\n//              <label>Scheduled Date</label>\n//              <input\n//                type=\"datetime-local\"\n//                name=\"scheduledDate\"\n//                value={updatedDrive.scheduledDate}\n//                onChange={handleInputChange}\n//                style={styles.input}\n//                required\n//              />\n//            </div>\n//            <div style={styles.formGroup}>\n//              <label>Location</label>\n//              <input\n//                type=\"text\"\n//                name=\"location\"\n//                value={updatedDrive.location}\n//                onChange={handleInputChange}\n//                style={styles.input}\n//                required\n//              />\n//            </div>\n//            <div style={styles.formGroup}>\n//              <label>Available Doses</label>\n//              <input\n//                type=\"number\"\n//                name=\"availableDozes\"\n//                value={updatedDrive.availableDozes}\n//                onChange={handleInputChange}\n//                style={styles.input}\n//                required\n//              />\n//            </div>\n//            <div style={styles.formGroup}>\n//              <label>Applicable Classes (comma-separated)</label>\n//              <input\n//                type=\"text\"\n//                name=\"applicableClasses\"\n//                value={updatedDrive.applicableClasses.join(', ')}\n//                onChange={handleInputChange}\n//                style={styles.input}\n//                required\n//              />\n//            </div>\n//            <button type=\"submit\" style={styles.button}>Update Drive</button>\n//          </form>\n//        </div>\n//      )}\n//    </div>\n//  );\n//};\n//\n//export default Dashboard;\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport NavigationMenu from './NavigationMenu';\nimport axios from '../api/axios';\nconst Dashboard = ({\n  token\n}) => {\n  var _data$totalStudents, _data$vaccinatedStude, _data$vaccinatedPerce;\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!token) {\n      setLoading(false);\n      return;\n    }\n    const fetchDashboard = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const res = await axios.post('/dashboard/overview', {}, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setData(res.data);\n      } catch (e) {\n        console.error(e);\n        setError('Failed to load dashboard data.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDashboard();\n  }, [token]);\n  const handleEditClick = driveIdentifier => {\n    navigate(`/edit-drive/${driveIdentifier}`);\n  };\n  const styles = {\n    container: {\n      maxWidth: '900px',\n      margin: '2rem auto',\n      padding: '1.5rem',\n      backgroundColor: '#fafafa',\n      borderRadius: '8px',\n      border: '1px solid #ddd'\n    },\n    header: {\n      textAlign: 'center',\n      marginBottom: '2rem'\n    },\n    statContainer: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginBottom: '2rem'\n    },\n    statBox: {\n      flex: '1',\n      margin: '0 0.5rem',\n      padding: '1rem',\n      borderRadius: '8px',\n      backgroundColor: 'white',\n      border: '1px solid #ccc',\n      textAlign: 'center'\n    },\n    table: {\n      width: '100%',\n      borderCollapse: 'collapse',\n      marginTop: '1rem'\n    },\n    th: {\n      border: '1px solid #ccc',\n      padding: '10px',\n      backgroundColor: '#f0f0f0',\n      textAlign: 'left'\n    },\n    td: {\n      border: '1px solid #ccc',\n      padding: '10px'\n    },\n    editButton: {\n      backgroundColor: '#007bff',\n      color: 'white',\n      padding: '8px 12px',\n      border: 'none',\n      cursor: 'pointer',\n      borderRadius: '5px',\n      fontWeight: 'bold'\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavigationMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 9\n    }\n  }, \"Dashboard Analytics\"), loading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 21\n    }\n  }, \"Loading dashboard data...\"), error && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 19\n    }\n  }, error), data && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.statContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.statBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 17\n    }\n  }, \"Total Students\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 17\n    }\n  }, (_data$totalStudents = data.totalStudents) !== null && _data$totalStudents !== void 0 ? _data$totalStudents : 0)), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.statBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 17\n    }\n  }, \"Vaccinated Students\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 17\n    }\n  }, (_data$vaccinatedStude = data.vaccinatedStudents) !== null && _data$vaccinatedStude !== void 0 ? _data$vaccinatedStude : 0)), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.statBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 17\n    }\n  }, \"Vaccinated Percentage\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 17\n    }\n  }, (_data$vaccinatedPerce = data.vaccinatedPercentage) !== null && _data$vaccinatedPerce !== void 0 ? _data$vaccinatedPerce : 0, \"%\"))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 13\n    }\n  }, \"Upcoming Vaccination Drives\"), Array.isArray(data.vaccinationDriveList) && data.vaccinationDriveList.length > 0 ? /*#__PURE__*/React.createElement(\"table\", {\n    style: styles.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: styles.th,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 21\n    }\n  }, \"Drive Identifier\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: styles.th,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 21\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: styles.th,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 21\n    }\n  }, \"Scheduled Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: styles.th,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 21\n    }\n  }, \"Location\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: styles.th,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 21\n    }\n  }, \"Available Doses\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: styles.th,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 21\n    }\n  }, \"Applicable Classes\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: styles.th,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 21\n    }\n  }, \"Edit\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 17\n    }\n  }, data.vaccinationDriveList.map(drive => {\n    var _drive$availableDoses;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: drive.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: styles.td,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 23\n      }\n    }, drive.driveIdentifier), /*#__PURE__*/React.createElement(\"td\", {\n      style: styles.td,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 23\n      }\n    }, drive.title), /*#__PURE__*/React.createElement(\"td\", {\n      style: styles.td,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 23\n      }\n    }, new Date(drive.scheduledDate).toLocaleDateString(undefined, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      style: styles.td,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 23\n      }\n    }, drive.location), /*#__PURE__*/React.createElement(\"td\", {\n      style: styles.td,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 23\n      }\n    }, (_drive$availableDoses = drive.availableDoses) !== null && _drive$availableDoses !== void 0 ? _drive$availableDoses : 0), /*#__PURE__*/React.createElement(\"td\", {\n      style: styles.td,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 23\n      }\n    }, (drive.applicableClasses || []).join(', ')), /*#__PURE__*/React.createElement(\"td\", {\n      style: styles.td,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: styles.editButton,\n      onClick: () => handleEditClick(drive.driveIdentifier),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 25\n      }\n    }, \"Edit\")));\n  }))) : /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 15\n    }\n  }, \"No vaccination drives available.\"))));\n};\nexport default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","NavigationMenu","axios","Dashboard","token","_data$totalStudents","_data$vaccinatedStude","_data$vaccinatedPerce","data","setData","loading","setLoading","error","setError","navigate","fetchDashboard","res","post","headers","Authorization","e","console","handleEditClick","driveIdentifier","styles","container","maxWidth","margin","padding","backgroundColor","borderRadius","border","header","textAlign","marginBottom","statContainer","display","justifyContent","statBox","flex","table","width","borderCollapse","marginTop","th","td","editButton","color","cursor","fontWeight","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","totalStudents","vaccinatedStudents","vaccinatedPercentage","Array","isArray","vaccinationDriveList","length","map","drive","_drive$availableDoses","key","id","title","Date","scheduledDate","toLocaleDateString","undefined","year","month","day","hour","minute","location","availableDoses","applicableClasses","join","onClick"],"sources":["/Users/satwikmohanty/IdeaProjects/vaccination-ui/src/components/Dashboard.js"],"sourcesContent":["//import React, { useState, useEffect } from 'react';\n//import { useNavigate } from 'react-router-dom';\n//import NavigationMenu from './NavigationMenu';\n//import axios from '../api/axios';\n//\n//const Dashboard = ({ token }) => {\n//  const [data, setData] = useState(null);\n//  const [loading, setLoading] = useState(true);\n//  const [error, setError] = useState(null);\n//  const [editingDrive, setEditingDrive] = useState(null);\n//  const [updatedDrive, setUpdatedDrive] = useState({\n//    name: '',\n//    title: '',\n//    scheduledDate: '',\n//    location: '',\n//    availableDozes: '',\n//    applicableClasses: []\n//  });\n//\n//  useEffect(() => {\n//    if (!token) {\n//      setLoading(false);\n//      return;\n//    }\n//\n//    const fetchDashboard = async () => {\n//      setLoading(true);\n//      setError(null);\n//      try {\n//        const res = await axios.post(\n//          '/dashboard/overview',\n//          {},\n//          { headers: { Authorization: `Bearer ${token}` } }\n//        );\n//        setData(res.data);\n//      } catch (e) {\n//        console.error(e);\n//        setError('Failed to load dashboard data.');\n//      } finally {\n//        setLoading(false);\n//      }\n//    };\n//\n//    fetchDashboard();\n//  }, [token]);\n//\n//  const handleEditClick = (drive) => {\n//    setEditingDrive(drive);\n//    setUpdatedDrive({\n//      title: drive.title,\n//      scheduledDate: new Date(drive.scheduledDate).toISOString().slice(0, 16),\n//      location: drive.location,\n//      availableDoses: drive.availableDoses,\n//      applicableClasses: drive.applicableClasses\n//    });\n//  };\n//\n//  const handleInputChange = (e) => {\n//    const { name, value } = e.target;\n//    if (name === 'applicableClasses') {\n//      setUpdatedDrive((prev) => ({\n//        ...prev,\n//        applicableClasses: value.split(',').map(cls => cls.trim())\n//      }));\n//    } else {\n//      setUpdatedDrive((prev) => ({ ...prev, [name]: value }));\n//    }\n//  };\n//\n//  const handleSubmit = async (e) => {\n//    e.preventDefault();\n//    try {\n//      await axios.put(\n//        `/vaccine-drive/update/${editingDrive.driveIdentifier}`,\n//        updatedDrive,\n//        { headers: { Authorization: `Bearer ${token}` } }\n//      );\n//      const updatedList = data.vaccinationDriveList.map((drive) =>\n//        drive.id === editingDrive.id ? { ...drive, ...updatedDrive } : drive\n//      );\n//      setData((prev) => ({ ...prev, vaccinationDriveList: updatedList }));\n//      setEditingDrive(null);\n//    } catch (e) {\n//      console.error(e);\n//      setError('Failed to update vaccination drive.');\n//    }\n//  };\n//\n//  const styles = {\n//    container: { maxWidth: '900px', margin: '2rem auto', padding: '1.5rem', backgroundColor: '#fafafa', borderRadius: '8px', border: '1px solid #ddd' },\n//    header: { textAlign: 'center', marginBottom: '2rem' },\n//    statContainer: { display: 'flex', justifyContent: 'space-between', marginBottom: '2rem' },\n//    statBox: { flex: '1', margin: '0 0.5rem', padding: '1rem', borderRadius: '8px', backgroundColor: 'white', border: '1px solid #ccc', textAlign: 'center' },\n//    table: { width: '100%', borderCollapse: 'collapse', marginTop: '1rem' },\n//    th: { border: '1px solid #ccc', padding: '10px', backgroundColor: '#f0f0f0', textAlign: 'left' },\n//    td: { border: '1px solid #ccc', padding: '10px' },\n//    button: { backgroundColor: '#007bff', color: 'white', padding: '8px 12px', border: 'none', cursor: 'pointer', borderRadius: '5px', fontWeight: 'bold' },\n//    formGroup: { marginBottom: '1rem' },\n//    input: { width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ccc', marginTop: '4px' }\n//  };\n//\n//  return (\n//    <div style={styles.container}>\n//      <NavigationMenu onNavigate={() => {}} />\n//      <h2 style={styles.header}>Dashboard Analytics</h2>\n//\n//      {loading && <p>Loading dashboard data...</p>}\n//      {error && <p style={{ color: 'red' }}>{error}</p>}\n//\n//      {data && (\n//        <>\n//          <div style={styles.statContainer}>\n//            <div style={styles.statBox}>\n//              <h3>Total Students</h3>\n//              <p>{data.totalStudents}</p>\n//            </div>\n//            <div style={styles.statBox}>\n//              <h3>Vaccinated Students</h3>\n//              <p>{data.vaccinatedStudents}</p>\n//            </div>\n//            <div style={styles.statBox}>\n//              <h3>Vaccinated Percentage</h3>\n//              <p>{data.vaccinatedPercentage}%</p>\n//            </div>\n//          </div>\n//\n//          <h3>Upcoming Vaccination Drives</h3>\n//          {data.vaccinationDriveList.length > 0 ? (\n//            <table style={styles.table}>\n//              <thead>\n//                <tr>\n//                  <th style={styles.th}>Drive Identifier</th>\n//                  <th style={styles.th}>Title</th>\n//                  <th style={styles.th}>Scheduled Date</th>\n//                  <th style={styles.th}>Location</th>\n//                  <th style={styles.th}>Available Doses</th>\n//                  <th style={styles.th}>Applicable Classes</th>\n//                  <th style={styles.th}>Edit</th>\n//                </tr>\n//              </thead>\n//              <tbody>\n//                {data.vaccinationDriveList.map((drive) => (\n//                  <tr key={drive.id}>\n//                    <td style={styles.td}>{drive.driveIdentifier}</td>\n//                    <td style={styles.td}>{drive.title}</td>\n//                    <td style={styles.td}>{new Date(drive.scheduledDate).toLocaleString()}</td>\n//                    <td style={styles.td}>{drive.location}</td>\n//                    <td style={styles.td}>{drive.availableDozes}</td>\n//                    <td style={styles.td}>{drive.applicableClasses.join(', ')}</td>\n//                    <td style={styles.td}>\n//                      <button style={styles.button} onClick={() => handleEditClick(drive)}>\n//                        Edit\n//                      </button>\n//                    </td>\n//                  </tr>\n//                ))}\n//              </tbody>\n//            </table>\n//          ) : (\n//            <p style={{ textAlign: 'center', marginTop: '1rem' }}>No vaccination drives available.</p>\n//          )}\n//        </>\n//      )}\n//\n//      {/* Edit Form */}\n//      {editingDrive && (\n//        <div style={{ marginTop: '2rem' }}>\n//          <h3>Edit Vaccination Drive</h3>\n//          <form onSubmit={handleSubmit}>\n//            <div style={styles.formGroup}>\n//              <label>Title</label>\n//              <input\n//                type=\"text\"\n//                name=\"title\"\n//                value={updatedDrive.title}\n//                onChange={handleInputChange}\n//                style={styles.input}\n//                required\n//              />\n//            </div>\n//            <div style={styles.formGroup}>\n//              <label>Scheduled Date</label>\n//              <input\n//                type=\"datetime-local\"\n//                name=\"scheduledDate\"\n//                value={updatedDrive.scheduledDate}\n//                onChange={handleInputChange}\n//                style={styles.input}\n//                required\n//              />\n//            </div>\n//            <div style={styles.formGroup}>\n//              <label>Location</label>\n//              <input\n//                type=\"text\"\n//                name=\"location\"\n//                value={updatedDrive.location}\n//                onChange={handleInputChange}\n//                style={styles.input}\n//                required\n//              />\n//            </div>\n//            <div style={styles.formGroup}>\n//              <label>Available Doses</label>\n//              <input\n//                type=\"number\"\n//                name=\"availableDozes\"\n//                value={updatedDrive.availableDozes}\n//                onChange={handleInputChange}\n//                style={styles.input}\n//                required\n//              />\n//            </div>\n//            <div style={styles.formGroup}>\n//              <label>Applicable Classes (comma-separated)</label>\n//              <input\n//                type=\"text\"\n//                name=\"applicableClasses\"\n//                value={updatedDrive.applicableClasses.join(', ')}\n//                onChange={handleInputChange}\n//                style={styles.input}\n//                required\n//              />\n//            </div>\n//            <button type=\"submit\" style={styles.button}>Update Drive</button>\n//          </form>\n//        </div>\n//      )}\n//    </div>\n//  );\n//};\n//\n//export default Dashboard;\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport NavigationMenu from './NavigationMenu';\nimport axios from '../api/axios';\n\nconst Dashboard = ({ token }) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!token) {\n      setLoading(false);\n      return;\n    }\n\n    const fetchDashboard = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const res = await axios.post(\n          '/dashboard/overview',\n          {},\n          { headers: { Authorization: `Bearer ${token}` } }\n        );\n        setData(res.data);\n      } catch (e) {\n        console.error(e);\n        setError('Failed to load dashboard data.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchDashboard();\n  }, [token]);\n\n  const handleEditClick = (driveIdentifier) => {\n    navigate(`/edit-drive/${driveIdentifier}`);\n  };\n\n  const styles = {\n    container: {\n      maxWidth: '900px',\n      margin: '2rem auto',\n      padding: '1.5rem',\n      backgroundColor: '#fafafa',\n      borderRadius: '8px',\n      border: '1px solid #ddd',\n    },\n    header: { textAlign: 'center', marginBottom: '2rem' },\n    statContainer: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginBottom: '2rem',\n    },\n    statBox: {\n      flex: '1',\n      margin: '0 0.5rem',\n      padding: '1rem',\n      borderRadius: '8px',\n      backgroundColor: 'white',\n      border: '1px solid #ccc',\n      textAlign: 'center',\n    },\n    table: {\n      width: '100%',\n      borderCollapse: 'collapse',\n      marginTop: '1rem',\n    },\n    th: {\n      border: '1px solid #ccc',\n      padding: '10px',\n      backgroundColor: '#f0f0f0',\n      textAlign: 'left',\n    },\n    td: {\n      border: '1px solid #ccc',\n      padding: '10px',\n    },\n    editButton: {\n      backgroundColor: '#007bff',\n      color: 'white',\n      padding: '8px 12px',\n      border: 'none',\n      cursor: 'pointer',\n      borderRadius: '5px',\n      fontWeight: 'bold',\n    },\n  };\n\n  return (\n    <>\n      <NavigationMenu />\n      <div style={styles.container}>\n        <h2 style={styles.header}>Dashboard Analytics</h2>\n\n        {loading && <p>Loading dashboard data...</p>}\n        {error && <p style={{ color: 'red' }}>{error}</p>}\n\n        {data && (\n          <>\n            <div style={styles.statContainer}>\n              <div style={styles.statBox}>\n                <h3>Total Students</h3>\n                <p>{data.totalStudents ?? 0}</p>\n              </div>\n              <div style={styles.statBox}>\n                <h3>Vaccinated Students</h3>\n                <p>{data.vaccinatedStudents ?? 0}</p>\n              </div>\n              <div style={styles.statBox}>\n                <h3>Vaccinated Percentage</h3>\n                <p>{data.vaccinatedPercentage ?? 0}%</p>\n              </div>\n            </div>\n\n            <h3>Upcoming Vaccination Drives</h3>\n            {Array.isArray(data.vaccinationDriveList) && data.vaccinationDriveList.length > 0 ? (\n              <table style={styles.table}>\n                <thead>\n                  <tr>\n                    <th style={styles.th}>Drive Identifier</th>\n                    <th style={styles.th}>Title</th>\n                    <th style={styles.th}>Scheduled Date</th>\n                    <th style={styles.th}>Location</th>\n                    <th style={styles.th}>Available Doses</th>\n                    <th style={styles.th}>Applicable Classes</th>\n                    <th style={styles.th}>Edit</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {data.vaccinationDriveList.map((drive) => (\n                    <tr key={drive.id}>\n                      <td style={styles.td}>{drive.driveIdentifier}</td>\n                      <td style={styles.td}>{drive.title}</td>\n                      <td style={styles.td}>\n                        {new Date(drive.scheduledDate).toLocaleDateString(undefined, {\n                          year: 'numeric',\n                          month: 'short',\n                          day: 'numeric',\n                          hour: '2-digit',\n                          minute: '2-digit',\n                        })}\n                      </td>\n                      <td style={styles.td}>{drive.location}</td>\n                      <td style={styles.td}>{drive.availableDoses ?? 0}</td>\n                      <td style={styles.td}>{(drive.applicableClasses || []).join(', ')}</td>\n                      <td style={styles.td}>\n                        <button\n                          style={styles.editButton}\n                          onClick={() => handleEditClick(drive.driveIdentifier)}\n                        >\n                          Edit\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            ) : (\n              <p style={{ textAlign: 'center', marginTop: '1rem' }}>\n                No vaccination drives available.\n              </p>\n            )}\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Dashboard;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module"}