{"ast":null,"code":"var _jsxFileName = \"/Users/satwikmohanty/IdeaProjects/vaccination-ui/src/App.js\";\n//import React, { useState, useEffect } from 'react';\n//import LoginForm from './components/LoginForm';\n//import axios from './api/axios';\n//\n//// Dashboard component to display the fetched data\n//const Dashboard = ({ dashboardData, loading }) => {\n//  if (loading) {\n//    return <p>Loading dashboard data...</p>;\n//  }\n//\n//  if (!dashboardData) {\n//    return <p>No dashboard data available.</p>;\n//  }\n//\n//  return (\n//    <div>\n//      <h2>Dashboard</h2>\n//      <div>\n//        <p><strong>Total Students:</strong> {dashboardData.totalStudents}</p>\n//        <p><strong>Students Vaccinated:</strong> {dashboardData.vaccinatedStudents}</p>\n//        <p><strong>Vaccinated Percentage:</strong> {dashboardData.vaccinatedPercentage}%</p>\n//        <h3>Upcoming Vaccination Drives</h3>\n//        {dashboardData.vaccinationDriveList && dashboardData.vaccinationDriveList.length > 0 ? (\n//          <table style={{ width: '100%', border: '1px solid gray', marginTop: '20px' }}>\n//            <thead>\n//              <tr>\n//                <th>Drive Identifier</th>\n//                <th>Title</th>\n//                <th>Scheduled Date</th>\n//                <th>Location</th>\n//                <th>Available Dozes</th>\n//                <th>Applicable Classes</th>\n//              </tr>\n//            </thead>\n//            <tbody>\n//              {dashboardData.vaccinationDriveList.map((drive) => (\n//                <tr key={drive.id}>\n//                  <td>{drive.driveIdentifier}</td>\n//                  <td>{drive.title}</td>\n//                  <td>{new Date(drive.scheduledDate).toLocaleString()}</td>\n//                  <td>{drive.location}</td>\n//                  <td>{drive.availableDozes}</td>\n//                  <td>{drive.applicableClasses.join(', ')}</td>\n//                </tr>\n//              ))}\n//            </tbody>\n//          </table>\n//        ) : (\n//          <p>No vaccination drives available.</p>\n//        )}\n//      </div>\n//    </div>\n//  );\n//};\n//\n//// Main App component\n//const App = () => {\n//  const [token, setToken] = useState('');\n//  const [dashboardData, setDashboardData] = useState(null);\n//  const [loading, setLoading] = useState(false);\n//  const [error, setError] = useState(null);\n//\n//  // Fetching dashboard data whenever the token changes\n//  useEffect(() => {\n//    if (token) {\n//      fetchDashboardData();\n//    }\n//  }, [token]);\n//\n//  // Fetch dashboard data from the backend\n//  const fetchDashboardData = async () => {\n//    setLoading(true);\n//    setError(null);  // Reset error state before fetching\n//\n//    try {\n//      const response = await axios.post('/dashboard/overview');\n//      setDashboardData(response.data);\n//    } catch (error) {\n//      console.error('Error fetching dashboard data:', error);\n//      setError('Failed to load dashboard data.');\n//    } finally {\n//      setLoading(false);\n//    }\n//  };\n//\n//  return (\n//    <div>\n//      <h1>School Vaccination Portal</h1>\n//      {!token ? (\n//        <LoginForm setToken={setToken} />\n//      ) : (\n//        <>\n//          {error && <p style={{ color: 'red' }}>{error}</p>}\n//          <Dashboard dashboardData={dashboardData} loading={loading} />\n//        </>\n//      )}\n//    </div>\n//  );\n//};\n//\n//export default App;\n\nimport React, { useState } from 'react';\nimport LoginForm from './components/LoginForm';\nimport Dashboard from './Dashboard'; // Import the Dashboard component\n\nconst App = () => {\n  const [token, setToken] = useState('');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, \"School Vaccination Portal\"), !token ? /*#__PURE__*/React.createElement(LoginForm, {\n    setToken: setToken,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Dashboard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }) // Dashboard will fetch data and display once logged in\n  );\n};\nexport default App;","map":{"version":3,"names":["React","useState","LoginForm","Dashboard","App","token","setToken","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/satwikmohanty/IdeaProjects/vaccination-ui/src/App.js"],"sourcesContent":["//import React, { useState, useEffect } from 'react';\n//import LoginForm from './components/LoginForm';\n//import axios from './api/axios';\n//\n//// Dashboard component to display the fetched data\n//const Dashboard = ({ dashboardData, loading }) => {\n//  if (loading) {\n//    return <p>Loading dashboard data...</p>;\n//  }\n//\n//  if (!dashboardData) {\n//    return <p>No dashboard data available.</p>;\n//  }\n//\n//  return (\n//    <div>\n//      <h2>Dashboard</h2>\n//      <div>\n//        <p><strong>Total Students:</strong> {dashboardData.totalStudents}</p>\n//        <p><strong>Students Vaccinated:</strong> {dashboardData.vaccinatedStudents}</p>\n//        <p><strong>Vaccinated Percentage:</strong> {dashboardData.vaccinatedPercentage}%</p>\n//        <h3>Upcoming Vaccination Drives</h3>\n//        {dashboardData.vaccinationDriveList && dashboardData.vaccinationDriveList.length > 0 ? (\n//          <table style={{ width: '100%', border: '1px solid gray', marginTop: '20px' }}>\n//            <thead>\n//              <tr>\n//                <th>Drive Identifier</th>\n//                <th>Title</th>\n//                <th>Scheduled Date</th>\n//                <th>Location</th>\n//                <th>Available Dozes</th>\n//                <th>Applicable Classes</th>\n//              </tr>\n//            </thead>\n//            <tbody>\n//              {dashboardData.vaccinationDriveList.map((drive) => (\n//                <tr key={drive.id}>\n//                  <td>{drive.driveIdentifier}</td>\n//                  <td>{drive.title}</td>\n//                  <td>{new Date(drive.scheduledDate).toLocaleString()}</td>\n//                  <td>{drive.location}</td>\n//                  <td>{drive.availableDozes}</td>\n//                  <td>{drive.applicableClasses.join(', ')}</td>\n//                </tr>\n//              ))}\n//            </tbody>\n//          </table>\n//        ) : (\n//          <p>No vaccination drives available.</p>\n//        )}\n//      </div>\n//    </div>\n//  );\n//};\n//\n//// Main App component\n//const App = () => {\n//  const [token, setToken] = useState('');\n//  const [dashboardData, setDashboardData] = useState(null);\n//  const [loading, setLoading] = useState(false);\n//  const [error, setError] = useState(null);\n//\n//  // Fetching dashboard data whenever the token changes\n//  useEffect(() => {\n//    if (token) {\n//      fetchDashboardData();\n//    }\n//  }, [token]);\n//\n//  // Fetch dashboard data from the backend\n//  const fetchDashboardData = async () => {\n//    setLoading(true);\n//    setError(null);  // Reset error state before fetching\n//\n//    try {\n//      const response = await axios.post('/dashboard/overview');\n//      setDashboardData(response.data);\n//    } catch (error) {\n//      console.error('Error fetching dashboard data:', error);\n//      setError('Failed to load dashboard data.');\n//    } finally {\n//      setLoading(false);\n//    }\n//  };\n//\n//  return (\n//    <div>\n//      <h1>School Vaccination Portal</h1>\n//      {!token ? (\n//        <LoginForm setToken={setToken} />\n//      ) : (\n//        <>\n//          {error && <p style={{ color: 'red' }}>{error}</p>}\n//          <Dashboard dashboardData={dashboardData} loading={loading} />\n//        </>\n//      )}\n//    </div>\n//  );\n//};\n//\n//export default App;\n\nimport React, { useState } from 'react';\nimport LoginForm from './components/LoginForm';\nimport Dashboard from './Dashboard';  // Import the Dashboard component\n\nconst App = () => {\n  const [token, setToken] = useState('');\n\n  return (\n    <div>\n      <h1>School Vaccination Portal</h1>\n      {!token ? (\n        <LoginForm setToken={setToken} />\n      ) : (\n        <Dashboard /> // Dashboard will fetch data and display once logged in\n      )}\n    </div>\n  );\n};\n\nexport default App;\n\n"],"mappingsvC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,SAAS,MAAM,aAAa,CAAC,CAAE;;AAEtC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEtC,oBACED,KAAA,CAAAO,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEb,KAAA,CAAAO,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,2BAA6B,CAAC,EACjC,CAACR,KAAK,gBACLL,KAAA,CAAAO,aAAA,CAACL,SAAS;IAACI,QAAQ,EAAEA,QAAS;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,gBAEjCb,KAAA,CAAAO,aAAA,CAACJ,SAAS;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,CAAC;EAEb,CAAC;AAEV,CAAC;AAED,eAAeT,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module"}