{"ast":null,"code":"var _jsxFileName = \"/Users/satwikmohanty/IdeaProjects/vaccination-ui/src/components/Dashboard.js\";\n//import React, { useState, useEffect } from 'react';\n//import NavigationMenu from './NavigationMenu';\n//import axios from '../api/axios'; // Axios instance pointing to your backend\n//\n//const Dashboard = () => {\n//  const [analytics, setAnalytics] = useState({\n//    totalStudents: 0,\n//    vaccinatedStudents: 0,\n//    vaccinatedPercentage: 0,\n//    vaccinationDriveList: []\n//  });\n//  const [loading, setLoading] = useState(true);\n//\n//  useEffect(() => {\n//    fetchDashboardData();\n//  }, []);\n//\n//  const fetchDashboardData = async () => {\n//    try {\n//      const response = await axios.post('/dashboard/overview');\n//      setAnalytics({\n//        totalStudents: response.data.totalStudents,\n//        vaccinatedStudents: response.data.vaccinatedStudents,\n//        vaccinatedPercentage: response.data.vaccinatedPercentage,\n//        vaccinationDriveList: response.data.vaccinationDriveList\n//      });\n//      setLoading(false);\n//    } catch (error) {\n//      console.error('Error fetching dashboard data:', error);\n//      setLoading(false);\n//    }\n//  };\n//\n//  if (loading) {\n//    return <div>Loading Dashboard...</div>;\n//  }\n//\n//  return (\n//    <div>\n//      <NavigationMenu />\n//      <h2>Dashboard Analytics</h2>\n//      <div>\n//        <p><strong>Total Students:</strong> {analytics.totalStudents}</p>\n//        <p><strong>Vaccinated Students:</strong> {analytics.vaccinatedStudents}</p>\n//        <p><strong>Vaccinated Percentage:</strong> {analytics.vaccinatedPercentage}%</p>\n//      </div>\n//\n//      <h3>Upcoming Vaccination Drives</h3>\n//      {analytics.vaccinationDriveList && analytics.vaccinationDriveList.length > 0 ? (\n//        <table style={{ width: '100%', border: '1px solid gray', marginTop: '20px' }}>\n//          <thead>\n//            <tr>\n//              <th>Drive Identifier</th>\n//              <th>Title</th>\n//              <th>Scheduled Date</th>\n//              <th>Location</th>\n//              <th>Available Dozes</th>\n//              <th>Applicable Classes</th>\n//            </tr>\n//          </thead>\n//          <tbody>\n//            {analytics.vaccinationDriveList.map((drive) => (\n//              <tr key={drive.id}>\n//                <td>{drive.driveIdentifier}</td>\n//                <td>{drive.title}</td>\n//                <td>{new Date(drive.scheduledDate).toLocaleString()}</td>\n//                <td>{drive.location}</td>\n//                <td>{drive.availableDozes}</td>\n//                <td>{drive.applicableClasses.join(', ')}</td>\n//              </tr>\n//            ))}\n//          </tbody>\n//        </table>\n//      ) : (\n//        <p>No vaccination drives available.</p>\n//      )}\n//    </div>\n//  );\n//};\n//\n//export default Dashboard;\nimport React, { useState, useEffect } from 'react';\nimport axios from '../api/axios'; // Ensure axios is set up correctly for API requests\n\nconst Dashboard = () => {\n  const [dashboardData, setDashboardData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchDashboardData();\n  }, []);\n  const fetchDashboardData = async () => {\n    setLoading(true);\n    setError(null); // Reset error state before fetching\n    try {\n      const response = await axios.post('/dashboard/overview');\n      setDashboardData(response.data);\n    } catch (error) {\n      console.error('Error fetching dashboard data:', error);\n      setError('Failed to load dashboard data.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 12\n      }\n    }, \"Loading Dashboard...\");\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, \"Dashboard\"), error && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, error), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 12\n    }\n  }, \"Total Students:\"), \" \", dashboardData.totalStudents), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 12\n    }\n  }, \"Students Vaccinated:\"), \" \", dashboardData.vaccinatedStudents), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 12\n    }\n  }, \"Vaccinated Percentage:\"), \" \", dashboardData.vaccinatedPercentage, \"%\")), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, \"Upcoming Vaccination Drives\"), dashboardData.vaccinationDriveList && dashboardData.vaccinationDriveList.length > 0 ? /*#__PURE__*/React.createElement(\"table\", {\n    style: {\n      width: '100%',\n      borderCollapse: 'collapse',\n      marginTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: tableHeaderStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, \"Drive Identifier\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: tableHeaderStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: tableHeaderStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, \"Scheduled Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: tableHeaderStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, \"Location\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: tableHeaderStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, \"Available Dozes\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: tableHeaderStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, \"Applicable Classes\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, dashboardData.vaccinationDriveList.map(drive => /*#__PURE__*/React.createElement(\"tr\", {\n    key: drive.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    style: tableCellStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, drive.driveIdentifier), /*#__PURE__*/React.createElement(\"td\", {\n    style: tableCellStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, drive.title), /*#__PURE__*/React.createElement(\"td\", {\n    style: tableCellStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, new Date(drive.scheduledDate).toLocaleString()), /*#__PURE__*/React.createElement(\"td\", {\n    style: tableCellStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, drive.location), /*#__PURE__*/React.createElement(\"td\", {\n    style: tableCellStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, drive.availableDozes), /*#__PURE__*/React.createElement(\"td\", {\n    style: tableCellStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, drive.applicableClasses.join(', ')))))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, \"No vaccination drives available.\"));\n};\n\n// Styles for table headers and cells to create clear lines between rows and columns\nconst tableHeaderStyle = {\n  border: '1px solid #ddd',\n  padding: '10px',\n  textAlign: 'left',\n  backgroundColor: '#f4f4f4'\n};\nconst tableCellStyle = {\n  border: '1px solid #ddd',\n  padding: '8px'\n};\nexport default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","axios","Dashboard","dashboardData","setDashboardData","loading","setLoading","error","setError","fetchDashboardData","response","post","data","console","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","color","totalStudents","vaccinatedStudents","vaccinatedPercentage","vaccinationDriveList","length","width","borderCollapse","marginTop","tableHeaderStyle","map","drive","key","id","tableCellStyle","driveIdentifier","title","Date","scheduledDate","toLocaleString","location","availableDozes","applicableClasses","join","border","padding","textAlign","backgroundColor"],"sources":["/Users/satwikmohanty/IdeaProjects/vaccination-ui/src/components/Dashboard.js"],"sourcesContent":["//import React, { useState, useEffect } from 'react';\n//import NavigationMenu from './NavigationMenu';\n//import axios from '../api/axios'; // Axios instance pointing to your backend\n//\n//const Dashboard = () => {\n//  const [analytics, setAnalytics] = useState({\n//    totalStudents: 0,\n//    vaccinatedStudents: 0,\n//    vaccinatedPercentage: 0,\n//    vaccinationDriveList: []\n//  });\n//  const [loading, setLoading] = useState(true);\n//\n//  useEffect(() => {\n//    fetchDashboardData();\n//  }, []);\n//\n//  const fetchDashboardData = async () => {\n//    try {\n//      const response = await axios.post('/dashboard/overview');\n//      setAnalytics({\n//        totalStudents: response.data.totalStudents,\n//        vaccinatedStudents: response.data.vaccinatedStudents,\n//        vaccinatedPercentage: response.data.vaccinatedPercentage,\n//        vaccinationDriveList: response.data.vaccinationDriveList\n//      });\n//      setLoading(false);\n//    } catch (error) {\n//      console.error('Error fetching dashboard data:', error);\n//      setLoading(false);\n//    }\n//  };\n//\n//  if (loading) {\n//    return <div>Loading Dashboard...</div>;\n//  }\n//\n//  return (\n//    <div>\n//      <NavigationMenu />\n//      <h2>Dashboard Analytics</h2>\n//      <div>\n//        <p><strong>Total Students:</strong> {analytics.totalStudents}</p>\n//        <p><strong>Vaccinated Students:</strong> {analytics.vaccinatedStudents}</p>\n//        <p><strong>Vaccinated Percentage:</strong> {analytics.vaccinatedPercentage}%</p>\n//      </div>\n//\n//      <h3>Upcoming Vaccination Drives</h3>\n//      {analytics.vaccinationDriveList && analytics.vaccinationDriveList.length > 0 ? (\n//        <table style={{ width: '100%', border: '1px solid gray', marginTop: '20px' }}>\n//          <thead>\n//            <tr>\n//              <th>Drive Identifier</th>\n//              <th>Title</th>\n//              <th>Scheduled Date</th>\n//              <th>Location</th>\n//              <th>Available Dozes</th>\n//              <th>Applicable Classes</th>\n//            </tr>\n//          </thead>\n//          <tbody>\n//            {analytics.vaccinationDriveList.map((drive) => (\n//              <tr key={drive.id}>\n//                <td>{drive.driveIdentifier}</td>\n//                <td>{drive.title}</td>\n//                <td>{new Date(drive.scheduledDate).toLocaleString()}</td>\n//                <td>{drive.location}</td>\n//                <td>{drive.availableDozes}</td>\n//                <td>{drive.applicableClasses.join(', ')}</td>\n//              </tr>\n//            ))}\n//          </tbody>\n//        </table>\n//      ) : (\n//        <p>No vaccination drives available.</p>\n//      )}\n//    </div>\n//  );\n//};\n//\n//export default Dashboard;\nimport React, { useState, useEffect } from 'react';\nimport axios from '../api/axios'; // Ensure axios is set up correctly for API requests\n\nconst Dashboard = () => {\n  const [dashboardData, setDashboardData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchDashboardData();\n  }, []);\n\n  const fetchDashboardData = async () => {\n    setLoading(true);\n    setError(null); // Reset error state before fetching\n    try {\n      const response = await axios.post('/dashboard/overview');\n      setDashboardData(response.data);\n    } catch (error) {\n      console.error('Error fetching dashboard data:', error);\n      setError('Failed to load dashboard data.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return <div>Loading Dashboard...</div>;\n  }\n\n  return (\n    <div>\n      <h2>Dashboard</h2>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n\n      <div>\n        <p><strong>Total Students:</strong> {dashboardData.totalStudents}</p>\n        <p><strong>Students Vaccinated:</strong> {dashboardData.vaccinatedStudents}</p>\n        <p><strong>Vaccinated Percentage:</strong> {dashboardData.vaccinatedPercentage}%</p>\n      </div>\n\n      <h3>Upcoming Vaccination Drives</h3>\n      {dashboardData.vaccinationDriveList && dashboardData.vaccinationDriveList.length > 0 ? (\n        <table style={{ width: '100%', borderCollapse: 'collapse', marginTop: '20px' }}>\n          <thead>\n            <tr>\n              <th style={tableHeaderStyle}>Drive Identifier</th>\n              <th style={tableHeaderStyle}>Title</th>\n              <th style={tableHeaderStyle}>Scheduled Date</th>\n              <th style={tableHeaderStyle}>Location</th>\n              <th style={tableHeaderStyle}>Available Dozes</th>\n              <th style={tableHeaderStyle}>Applicable Classes</th>\n            </tr>\n          </thead>\n          <tbody>\n            {dashboardData.vaccinationDriveList.map((drive) => (\n              <tr key={drive.id}>\n                <td style={tableCellStyle}>{drive.driveIdentifier}</td>\n                <td style={tableCellStyle}>{drive.title}</td>\n                <td style={tableCellStyle}>{new Date(drive.scheduledDate).toLocaleString()}</td>\n                <td style={tableCellStyle}>{drive.location}</td>\n                <td style={tableCellStyle}>{drive.availableDozes}</td>\n                <td style={tableCellStyle}>{drive.applicableClasses.join(', ')}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <p>No vaccination drives available.</p>\n      )}\n    </div>\n  );\n};\n\n// Styles for table headers and cells to create clear lines between rows and columns\nconst tableHeaderStyle = {\n  border: '1px solid #ddd',\n  padding: '10px',\n  textAlign: 'left',\n  backgroundColor: '#f4f4f4',\n};\n\nconst tableCellStyle = {\n  border: '1px solid #ddd',\n  padding: '8px',\n};\n\nexport default Dashboard;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}