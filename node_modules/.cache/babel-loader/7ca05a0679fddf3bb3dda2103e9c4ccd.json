{"ast":null,"code":"//import React, { useState, useEffect } from 'react';\n//import NavigationMenu from './NavigationMenu';\n//import axios from '../api/axios';\n//\n//const Dashboard = ({ token }) => {\n//  const [data, setData] = useState(null);\n//  const [loading, setLoading] = useState(true);\n//  const [error, setError] = useState(null);\n//\n//  useEffect(() => {\n//    if (!token) {\n//      setLoading(false);\n//      return;\n//    }\n//\n//    const fetchDashboard = async () => {\n//      setLoading(true);\n//      setError(null);\n//      try {\n//        const res = await axios.post(\n//          '/dashboard/overview',\n//          {},\n//          { headers: { Authorization: `Bearer ${token}` } }\n//        );\n//        setData(res.data);\n//      } catch (e) {\n//        console.error(e);\n//        setError('Failed to load dashboard data.');\n//      } finally {\n//        setLoading(false);\n//      }\n//    };\n//\n//    fetchDashboard();\n//  }, [token]);\n//\n//  if (loading) return <p>Loading dashboard data...</p>;\n//  if (error) return <p style={{ color: 'red', textAlign: 'center' }}>{error}</p>;\n//  if (!data) return <p style={{ textAlign: 'center' }}>No dashboard data available.</p>;\n//\n//  const styles = {\n//    container: { maxWidth: '800px', margin: '2rem auto', padding: '1.5rem', backgroundColor: '#fafafa', borderRadius: '8px', border: '1px solid #ddd' },\n//    header: { textAlign: 'center', marginBottom: '1.5rem' },\n//    statContainer: { display: 'flex', justifyContent: 'space-between', marginBottom: '2rem' },\n//    statBox: { flex: '1', margin: '0 0.5rem', padding: '1rem', borderRadius: '6px', backgroundColor: 'white', border: '1px solid #ccc', textAlign: 'center' },\n//    table: { width: '100%', borderCollapse: 'collapse' },\n//    th: { border: '1px solid #ccc', padding: '10px', backgroundColor: '#f0f0f0', textAlign: 'left' },\n//    td: { border: '1px solid #ccc', padding: '10px' }\n//  };\n//\n//  return (\n//    <div style={styles.container}>\n//      <NavigationMenu onNavigate={() => {}} />  {/* navigationCallback unused here */}\n//      <h2 style={styles.header}>Dashboard Analytics</h2>\n//\n//      <div style={styles.statContainer}>\n//        <div style={styles.statBox}>\n//          <h3>Total Students</h3>\n//          <p>{data.totalStudents}</p>\n//        </div>\n//        <div style={styles.statBox}>\n//          <h3>Vaccinated Students</h3>\n//          <p>{data.vaccinatedStudents}</p>\n//        </div>\n//        <div style={styles.statBox}>\n//          <h3>Vaccinated Percentage</h3>\n//          <p>{data.vaccinatedPercentage}%</p>\n//        </div>\n//      </div>\n//\n//      <h3>Upcoming Vaccination Drives</h3>\n//      {data.vaccinationDriveList.length > 0 ? (\n//        <table style={styles.table}>\n//          <thead>\n//            <tr>\n//              <th style={styles.th}>Drive Identifier</th>\n//              <th style={styles.th}>Title</th>\n//              <th style={styles.th}>Scheduled Date</th>\n//              <th style={styles.th}>Location</th>\n//              <th style={styles.th}>Available Doses</th>\n//              <th style={styles.th}>Applicable Classes</th>\n//            </tr>\n//          </thead>\n//          <tbody>\n//            {data.vaccinationDriveList.map(drive => (\n//              <tr key={drive.id}>\n//                <td style={styles.td}>{drive.driveIdentifier}</td>\n//                <td style={styles.td}>{drive.title}</td>\n//                <td style={styles.td}>{new Date(drive.scheduledDate).toLocaleString()}</td>\n//                <td style={styles.td}>{drive.location}</td>\n//                <td style={styles.td}>{drive.availableDozes}</td>\n//                <td style={styles.td}>{drive.applicableClasses.join(', ')}</td>\n//              </tr>\n//            ))}\n//          </tbody>\n//        </table>\n//      ) : (\n//        <p style={{ textAlign: 'center', marginTop: '1rem' }}>No vaccination drives available.</p>\n//      )}\n//    </div>\n//  );\n//};\n//\n//export default Dashboard;","map":{"version":3,"names":[],"sources":["/Users/satwikmohanty/IdeaProjects/vaccination-ui/src/components/Dashboard.js"],"sourcesContent":["//import React, { useState, useEffect } from 'react';\n//import NavigationMenu from './NavigationMenu';\n//import axios from '../api/axios';\n//\n//const Dashboard = ({ token }) => {\n//  const [data, setData] = useState(null);\n//  const [loading, setLoading] = useState(true);\n//  const [error, setError] = useState(null);\n//\n//  useEffect(() => {\n//    if (!token) {\n//      setLoading(false);\n//      return;\n//    }\n//\n//    const fetchDashboard = async () => {\n//      setLoading(true);\n//      setError(null);\n//      try {\n//        const res = await axios.post(\n//          '/dashboard/overview',\n//          {},\n//          { headers: { Authorization: `Bearer ${token}` } }\n//        );\n//        setData(res.data);\n//      } catch (e) {\n//        console.error(e);\n//        setError('Failed to load dashboard data.');\n//      } finally {\n//        setLoading(false);\n//      }\n//    };\n//\n//    fetchDashboard();\n//  }, [token]);\n//\n//  if (loading) return <p>Loading dashboard data...</p>;\n//  if (error) return <p style={{ color: 'red', textAlign: 'center' }}>{error}</p>;\n//  if (!data) return <p style={{ textAlign: 'center' }}>No dashboard data available.</p>;\n//\n//  const styles = {\n//    container: { maxWidth: '800px', margin: '2rem auto', padding: '1.5rem', backgroundColor: '#fafafa', borderRadius: '8px', border: '1px solid #ddd' },\n//    header: { textAlign: 'center', marginBottom: '1.5rem' },\n//    statContainer: { display: 'flex', justifyContent: 'space-between', marginBottom: '2rem' },\n//    statBox: { flex: '1', margin: '0 0.5rem', padding: '1rem', borderRadius: '6px', backgroundColor: 'white', border: '1px solid #ccc', textAlign: 'center' },\n//    table: { width: '100%', borderCollapse: 'collapse' },\n//    th: { border: '1px solid #ccc', padding: '10px', backgroundColor: '#f0f0f0', textAlign: 'left' },\n//    td: { border: '1px solid #ccc', padding: '10px' }\n//  };\n//\n//  return (\n//    <div style={styles.container}>\n//      <NavigationMenu onNavigate={() => {}} />  {/* navigationCallback unused here */}\n//      <h2 style={styles.header}>Dashboard Analytics</h2>\n//\n//      <div style={styles.statContainer}>\n//        <div style={styles.statBox}>\n//          <h3>Total Students</h3>\n//          <p>{data.totalStudents}</p>\n//        </div>\n//        <div style={styles.statBox}>\n//          <h3>Vaccinated Students</h3>\n//          <p>{data.vaccinatedStudents}</p>\n//        </div>\n//        <div style={styles.statBox}>\n//          <h3>Vaccinated Percentage</h3>\n//          <p>{data.vaccinatedPercentage}%</p>\n//        </div>\n//      </div>\n//\n//      <h3>Upcoming Vaccination Drives</h3>\n//      {data.vaccinationDriveList.length > 0 ? (\n//        <table style={styles.table}>\n//          <thead>\n//            <tr>\n//              <th style={styles.th}>Drive Identifier</th>\n//              <th style={styles.th}>Title</th>\n//              <th style={styles.th}>Scheduled Date</th>\n//              <th style={styles.th}>Location</th>\n//              <th style={styles.th}>Available Doses</th>\n//              <th style={styles.th}>Applicable Classes</th>\n//            </tr>\n//          </thead>\n//          <tbody>\n//            {data.vaccinationDriveList.map(drive => (\n//              <tr key={drive.id}>\n//                <td style={styles.td}>{drive.driveIdentifier}</td>\n//                <td style={styles.td}>{drive.title}</td>\n//                <td style={styles.td}>{new Date(drive.scheduledDate).toLocaleString()}</td>\n//                <td style={styles.td}>{drive.location}</td>\n//                <td style={styles.td}>{drive.availableDozes}</td>\n//                <td style={styles.td}>{drive.applicableClasses.join(', ')}</td>\n//              </tr>\n//            ))}\n//          </tbody>\n//        </table>\n//      ) : (\n//        <p style={{ textAlign: 'center', marginTop: '1rem' }}>No vaccination drives available.</p>\n//      )}\n//    </div>\n//  );\n//};\n//\n//export default Dashboard;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module"}