{"ast":null,"code":"var _jsxFileName = \"/Users/satwikmohanty/IdeaProjects/vaccination-ui/src/components/Dashboard.js\";\n//import React, { useState, useEffect } from 'react';\n//import NavigationMenu from './NavigationMenu';\n//import axios from '../api/axios';\n//import { useNavigate } from 'react-router-dom';\n//\n//const Dashboard = ({ token }) => {\n//\n//  const [data, setData] = useState(null);\n//  const [loading, setLoading] = useState(true);\n//  const [error, setError] = useState(null);\n//  const [editingDrive, setEditingDrive] = useState(null);\n//  const [updatedDrive, setUpdatedDrive] = useState({\n//    title: '',\n//    scheduledDate: '',\n//    location: '',\n//    availableDozes: '',\n//    applicableClasses: []\n//  });\n//\n//  useEffect(() => {\n//    if (!token) {\n//      setLoading(false);\n//      return;\n//    }\n//\n//    const fetchDashboard = async () => {\n//      setLoading(true);\n//      setError(null);\n//      try {\n//        const res = await axios.post(\n//          '/dashboard/overview',\n//          {},\n//          { headers: { Authorization: `Bearer ${token}` } }\n//        );\n//        setData(res.data);\n//      } catch (e) {\n//        console.error(e);\n//        setError('Failed to load dashboard data.');\n//      } finally {\n//        setLoading(false);\n//      }\n//    };\n//\n//    fetchDashboard();\n//  }, [token]);\n//\n//  const handleEditClick = (drive) => {\n//    setEditingDrive(drive);\n//    setUpdatedDrive({\n//      title: drive.title,\n//      scheduledDate: drive.scheduledDate,\n//      location: drive.location,\n//      availableDozes: drive.availableDozes,\n//      applicableClasses: drive.applicableClasses\n//    });\n//  };\n//\n//  const handleInputChange = (e) => {\n//    const { name, value } = e.target;\n//    setUpdatedDrive((prev) => ({ ...prev, [name]: value }));\n//  };\n//\n//  const handleSubmit = async (e) => {\n//    e.preventDefault();\n//    try {\n//      // Update API endpoint adjusted to \"/v1/vaccine-drive/update/{identifier}\"\n//      const response = await axios.put(\n//        `/v1/vaccine-drive/update/${editingDrive.driveIdentifier}`, // Using the correct drive identifier\n//        updatedDrive,\n//        { headers: { Authorization: `Bearer ${token}` } }\n//      );\n//      const updatedVaccinationDrive = response.data;\n//      const updatedList = data.vaccinationDriveList.map((drive) =>\n//        drive.id === updatedVaccinationDrive.id ? updatedVaccinationDrive : drive\n//      );\n//      setData({ ...data, vaccinationDriveList: updatedList });\n//      setEditingDrive(null);\n//    } catch (error) {\n//      setError('Failed to update vaccination drive.');\n//    }\n//  };\n//\n//  const styles = {\n//    container: { maxWidth: '800px', margin: '2rem auto', padding: '1.5rem', backgroundColor: '#fafafa', borderRadius: '8px', border: '1px solid #ddd' },\n//    header: { textAlign: 'center', marginBottom: '1.5rem' },\n//    statContainer: { display: 'flex', justifyContent: 'space-between', marginBottom: '2rem' },\n//    statBox: { flex: '1', margin: '0 0.5rem', padding: '1rem', borderRadius: '6px', backgroundColor: 'white', border: '1px solid #ccc', textAlign: 'center' },\n//    table: { width: '100%', borderCollapse: 'collapse' },\n//    th: { border: '1px solid #ccc', padding: '10px', backgroundColor: '#f0f0f0', textAlign: 'left' },\n//    td: { border: '1px solid #ccc', padding: '10px' },\n//    button: { backgroundColor: '#007bff', color: 'white', padding: '5px 10px', border: 'none', cursor: 'pointer', borderRadius: '4px' }\n//  };\n//\n//  return (\n//    <div style={styles.container}>\n//      <NavigationMenu onNavigate={() => {}} />\n//      <h2 style={styles.header}>Dashboard Analytics</h2>\n//\n//      {/* Loading State */}\n//      {loading && <p>Loading dashboard data...</p>}\n//\n//      {/* Stats */}\n//      <div style={styles.statContainer}>\n//        <div style={styles.statBox}>\n//          <h3>Total Students</h3>\n//          <p>{data ? data.totalStudents : 'Loading...'}</p>\n//        </div>\n//        <div style={styles.statBox}>\n//          <h3>Vaccinated Students</h3>\n//          <p>{data ? data.vaccinatedStudents : 'Loading...'}</p>\n//        </div>\n//        <div style={styles.statBox}>\n//          <h3>Vaccinated Percentage</h3>\n//          <p>{data ? data.vaccinatedPercentage : 'Loading...'}</p>\n//        </div>\n//      </div>\n//\n//      {/* Vaccination Drives */}\n//      <h3>Upcoming Vaccination Drives</h3>\n//      {data && data.vaccinationDriveList.length > 0 ? (\n//        <table style={styles.table}>\n//          <thead>\n//            <tr>\n//              <th style={styles.th}>Drive Identifier</th>\n//              <th style={styles.th}>Title</th>\n//              <th style={styles.th}>Scheduled Date</th>\n//              <th style={styles.th}>Location</th>\n//              <th style={styles.th}>Available Doses</th>\n//              <th style={styles.th}>Applicable Classes</th>\n//              <th style={styles.th}>Edit</th>\n//            </tr>\n//          </thead>\n//          <tbody>\n//            {data.vaccinationDriveList.map((drive) => (\n//              <tr key={drive.id}>\n//                <td style={styles.td}>{drive.driveIdentifier}</td>\n//                <td style={styles.td}>{drive.title}</td>\n//                <td style={styles.td}>{new Date(drive.scheduledDate).toLocaleString()}</td>\n//                <td style={styles.td}>{drive.location}</td>\n//                <td style={styles.td}>{drive.availableDozes}</td>\n//                <td style={styles.td}>{drive.applicableClasses.join(', ')}</td>\n//                <td style={styles.td}>\n//                  <button style={styles.button} onClick={() => handleEditClick(drive)}>\n//                    Edit\n//                  </button>\n//                </td>\n//              </tr>\n//            ))}\n//          </tbody>\n//        </table>\n//      ) : (\n//        <p style={{ textAlign: 'center', marginTop: '1rem' }}>No vaccination drives available.</p>\n//      )}\n//\n//      {/* Edit Form */}\n//      {editingDrive && (\n//        <div style={{ marginTop: '2rem' }}>\n//          <h3>Edit Vaccination Drive</h3>\n//          <form onSubmit={handleSubmit}>\n//            <div>\n//              <label>Title</label>\n//              <input\n//                type=\"text\"\n//                name=\"title\"\n//                value={updatedDrive.title}\n//                onChange={handleInputChange}\n//                required\n//              />\n//            </div>\n//            <div>\n//              <label>Scheduled Date</label>\n//              <input\n//                type=\"datetime-local\"\n//                name=\"scheduledDate\"\n//                value={updatedDrive.scheduledDate}\n//                onChange={handleInputChange}\n//                required\n//              />\n//            </div>\n//            <div>\n//              <label>Location</label>\n//              <input\n//                type=\"text\"\n//                name=\"location\"\n//                value={updatedDrive.location}\n//                onChange={handleInputChange}\n//                required\n//              />\n//            </div>\n//            <div>\n//              <label>Available Doses</label>\n//              <input\n//                type=\"number\"\n//                name=\"availableDozes\"\n//                value={updatedDrive.availableDozes}\n//                onChange={handleInputChange}\n//                required\n//              />\n//            </div>\n//            <div>\n//              <label>Applicable Classes</label>\n//              <input\n//                type=\"text\"\n//                name=\"applicableClasses\"\n//                value={updatedDrive.applicableClasses.join(', ')}\n//                onChange={handleInputChange}\n//                required\n//              />\n//            </div>\n//            <button type=\"submit\" style={styles.button}>Update</button>\n//          </form>\n//        </div>\n//      )}\n//    </div>\n//  );\n//};\n//\n//export default Dashboard;\n//\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport NavigationMenu from './NavigationMenu';\nimport axios from '../api/axios';\nconst Dashboard = ({\n  token\n}) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [editingDrive, setEditingDrive] = useState(null);\n  const [updatedDrive, setUpdatedDrive] = useState({\n    title: '',\n    scheduledDate: '',\n    location: '',\n    availableDozes: '',\n    applicableClasses: []\n  });\n  useEffect(() => {\n    if (!token) {\n      setLoading(false);\n      return;\n    }\n    const fetchDashboard = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const res = await axios.post('/dashboard/overview', {}, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setData(res.data);\n      } catch (e) {\n        console.error(e);\n        setError('Failed to load dashboard data.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDashboard();\n  }, [token]);\n  const handleEditClick = drive => {\n    setEditingDrive(drive);\n    setUpdatedDrive({\n      title: drive.title,\n      scheduledDate: new Date(drive.scheduledDate).toISOString().slice(0, 16),\n      location: drive.location,\n      availableDoses: drive.availableDoses,\n      applicableClasses: drive.applicableClasses\n    });\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'applicableClasses') {\n      setUpdatedDrive(prev => ({\n        ...prev,\n        applicableClasses: value.split(',').map(cls => cls.trim())\n      }));\n    } else {\n      setUpdatedDrive(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.put(`/vaccine-drive/update/${editingDrive.driveIdentifier}`, updatedDrive, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const updatedList = data.vaccinationDriveList.map(drive => drive.id === editingDrive.id ? {\n        ...drive,\n        ...updatedDrive\n      } : drive);\n      setData(prev => ({\n        ...prev,\n        vaccinationDriveList: updatedList\n      }));\n      setEditingDrive(null);\n    } catch (e) {\n      console.error(e);\n      setError('Failed to update vaccination drive.');\n    }\n  };\n  const styles = {\n    container: {\n      maxWidth: '900px',\n      margin: '2rem auto',\n      padding: '1.5rem',\n      backgroundColor: '#fafafa',\n      borderRadius: '8px',\n      border: '1px solid #ddd'\n    },\n    header: {\n      textAlign: 'center',\n      marginBottom: '2rem'\n    },\n    statContainer: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginBottom: '2rem'\n    },\n    statBox: {\n      flex: '1',\n      margin: '0 0.5rem',\n      padding: '1rem',\n      borderRadius: '8px',\n      backgroundColor: 'white',\n      border: '1px solid #ccc',\n      textAlign: 'center'\n    },\n    table: {\n      width: '100%',\n      borderCollapse: 'collapse',\n      marginTop: '1rem'\n    },\n    th: {\n      border: '1px solid #ccc',\n      padding: '10px',\n      backgroundColor: '#f0f0f0',\n      textAlign: 'left'\n    },\n    td: {\n      border: '1px solid #ccc',\n      padding: '10px'\n    },\n    button: {\n      backgroundColor: '#007bff',\n      color: 'white',\n      padding: '8px 12px',\n      border: 'none',\n      cursor: 'pointer',\n      borderRadius: '5px',\n      fontWeight: 'bold'\n    },\n    formGroup: {\n      marginBottom: '1rem'\n    },\n    input: {\n      width: '100%',\n      padding: '8px',\n      borderRadius: '4px',\n      border: '1px solid #ccc',\n      marginTop: '4px'\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NavigationMenu, {\n    onNavigate: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }\n  }, \"Dashboard Analytics\"), loading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 19\n    }\n  }, \"Loading dashboard data...\"), error && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }\n  }, error), data && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.statContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.statBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 15\n    }\n  }, \"Total Students\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 15\n    }\n  }, data.totalStudents)), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.statBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 15\n    }\n  }, \"Vaccinated Students\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 15\n    }\n  }, data.vaccinatedStudents)), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.statBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 15\n    }\n  }, \"Vaccinated Percentage\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 15\n    }\n  }, data.vaccinatedPercentage, \"%\"))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 11\n    }\n  }, \"Upcoming Vaccination Drives\"), data.vaccinationDriveList.length > 0 ? /*#__PURE__*/React.createElement(\"table\", {\n    style: styles.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: styles.th,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 19\n    }\n  }, \"Drive Identifier\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: styles.th,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 19\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: styles.th,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 19\n    }\n  }, \"Scheduled Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: styles.th,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 19\n    }\n  }, \"Location\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: styles.th,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 19\n    }\n  }, \"Available Doses\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: styles.th,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 19\n    }\n  }, \"Applicable Classes\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: styles.th,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 19\n    }\n  }, \"Edit\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 15\n    }\n  }, data.vaccinationDriveList.map(drive => /*#__PURE__*/React.createElement(\"tr\", {\n    key: drive.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    style: styles.td,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 21\n    }\n  }, drive.driveIdentifier), /*#__PURE__*/React.createElement(\"td\", {\n    style: styles.td,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 21\n    }\n  }, drive.title), /*#__PURE__*/React.createElement(\"td\", {\n    style: styles.td,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 21\n    }\n  }, new Date(drive.scheduledDate).toLocaleString()), /*#__PURE__*/React.createElement(\"td\", {\n    style: styles.td,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 21\n    }\n  }, drive.location), /*#__PURE__*/React.createElement(\"td\", {\n    style: styles.td,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 21\n    }\n  }, drive.availableDozes), /*#__PURE__*/React.createElement(\"td\", {\n    style: styles.td,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 21\n    }\n  }, drive.applicableClasses.join(', ')), /*#__PURE__*/React.createElement(\"td\", {\n    style: styles.td,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    style: styles.button,\n    onClick: () => handleEditClick(drive),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 23\n    }\n  }, \"Edit\")))))) : /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 13\n    }\n  }, \"No vaccination drives available.\")), editingDrive && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 11\n    }\n  }, \"Edit Vaccination Drive\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.formGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 15\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    value: updatedDrive.title,\n    onChange: handleInputChange,\n    style: styles.input,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.formGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 15\n    }\n  }, \"Scheduled Date\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"datetime-local\",\n    name: \"scheduledDate\",\n    value: updatedDrive.scheduledDate,\n    onChange: handleInputChange,\n    style: styles.input,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.formGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 15\n    }\n  }, \"Location\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"location\",\n    value: updatedDrive.location,\n    onChange: handleInputChange,\n    style: styles.input,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.formGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 15\n    }\n  }, \"Available Doses\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"availableDozes\",\n    value: updatedDrive.availableDozes,\n    onChange: handleInputChange,\n    style: styles.input,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.formGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 15\n    }\n  }, \"Applicable Classes (comma-separated)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"applicableClasses\",\n    value: updatedDrive.applicableClasses.join(', '),\n    onChange: handleInputChange,\n    style: styles.input,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 13\n    }\n  }, \"Update Drive\"))));\n};\nexport default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","NavigationMenu","axios","Dashboard","token","data","setData","loading","setLoading","error","setError","editingDrive","setEditingDrive","updatedDrive","setUpdatedDrive","title","scheduledDate","location","availableDozes","applicableClasses","fetchDashboard","res","post","headers","Authorization","e","console","handleEditClick","drive","Date","toISOString","slice","availableDoses","handleInputChange","name","value","target","prev","split","map","cls","trim","handleSubmit","preventDefault","put","driveIdentifier","updatedList","vaccinationDriveList","id","styles","container","maxWidth","margin","padding","backgroundColor","borderRadius","border","header","textAlign","marginBottom","statContainer","display","justifyContent","statBox","flex","table","width","borderCollapse","marginTop","th","td","button","color","cursor","fontWeight","formGroup","input","createElement","style","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onNavigate","Fragment","totalStudents","vaccinatedStudents","vaccinatedPercentage","length","key","toLocaleString","join","onClick","onSubmit","type","onChange","required"],"sources":["/Users/satwikmohanty/IdeaProjects/vaccination-ui/src/components/Dashboard.js"],"sourcesContent":["//import React, { useState, useEffect } from 'react';\n//import NavigationMenu from './NavigationMenu';\n//import axios from '../api/axios';\n//import { useNavigate } from 'react-router-dom';\n//\n//const Dashboard = ({ token }) => {\n//\n//  const [data, setData] = useState(null);\n//  const [loading, setLoading] = useState(true);\n//  const [error, setError] = useState(null);\n//  const [editingDrive, setEditingDrive] = useState(null);\n//  const [updatedDrive, setUpdatedDrive] = useState({\n//    title: '',\n//    scheduledDate: '',\n//    location: '',\n//    availableDozes: '',\n//    applicableClasses: []\n//  });\n//\n//  useEffect(() => {\n//    if (!token) {\n//      setLoading(false);\n//      return;\n//    }\n//\n//    const fetchDashboard = async () => {\n//      setLoading(true);\n//      setError(null);\n//      try {\n//        const res = await axios.post(\n//          '/dashboard/overview',\n//          {},\n//          { headers: { Authorization: `Bearer ${token}` } }\n//        );\n//        setData(res.data);\n//      } catch (e) {\n//        console.error(e);\n//        setError('Failed to load dashboard data.');\n//      } finally {\n//        setLoading(false);\n//      }\n//    };\n//\n//    fetchDashboard();\n//  }, [token]);\n//\n//  const handleEditClick = (drive) => {\n//    setEditingDrive(drive);\n//    setUpdatedDrive({\n//      title: drive.title,\n//      scheduledDate: drive.scheduledDate,\n//      location: drive.location,\n//      availableDozes: drive.availableDozes,\n//      applicableClasses: drive.applicableClasses\n//    });\n//  };\n//\n//  const handleInputChange = (e) => {\n//    const { name, value } = e.target;\n//    setUpdatedDrive((prev) => ({ ...prev, [name]: value }));\n//  };\n//\n//  const handleSubmit = async (e) => {\n//    e.preventDefault();\n//    try {\n//      // Update API endpoint adjusted to \"/v1/vaccine-drive/update/{identifier}\"\n//      const response = await axios.put(\n//        `/v1/vaccine-drive/update/${editingDrive.driveIdentifier}`, // Using the correct drive identifier\n//        updatedDrive,\n//        { headers: { Authorization: `Bearer ${token}` } }\n//      );\n//      const updatedVaccinationDrive = response.data;\n//      const updatedList = data.vaccinationDriveList.map((drive) =>\n//        drive.id === updatedVaccinationDrive.id ? updatedVaccinationDrive : drive\n//      );\n//      setData({ ...data, vaccinationDriveList: updatedList });\n//      setEditingDrive(null);\n//    } catch (error) {\n//      setError('Failed to update vaccination drive.');\n//    }\n//  };\n//\n//  const styles = {\n//    container: { maxWidth: '800px', margin: '2rem auto', padding: '1.5rem', backgroundColor: '#fafafa', borderRadius: '8px', border: '1px solid #ddd' },\n//    header: { textAlign: 'center', marginBottom: '1.5rem' },\n//    statContainer: { display: 'flex', justifyContent: 'space-between', marginBottom: '2rem' },\n//    statBox: { flex: '1', margin: '0 0.5rem', padding: '1rem', borderRadius: '6px', backgroundColor: 'white', border: '1px solid #ccc', textAlign: 'center' },\n//    table: { width: '100%', borderCollapse: 'collapse' },\n//    th: { border: '1px solid #ccc', padding: '10px', backgroundColor: '#f0f0f0', textAlign: 'left' },\n//    td: { border: '1px solid #ccc', padding: '10px' },\n//    button: { backgroundColor: '#007bff', color: 'white', padding: '5px 10px', border: 'none', cursor: 'pointer', borderRadius: '4px' }\n//  };\n//\n//  return (\n//    <div style={styles.container}>\n//      <NavigationMenu onNavigate={() => {}} />\n//      <h2 style={styles.header}>Dashboard Analytics</h2>\n//\n//      {/* Loading State */}\n//      {loading && <p>Loading dashboard data...</p>}\n//\n//      {/* Stats */}\n//      <div style={styles.statContainer}>\n//        <div style={styles.statBox}>\n//          <h3>Total Students</h3>\n//          <p>{data ? data.totalStudents : 'Loading...'}</p>\n//        </div>\n//        <div style={styles.statBox}>\n//          <h3>Vaccinated Students</h3>\n//          <p>{data ? data.vaccinatedStudents : 'Loading...'}</p>\n//        </div>\n//        <div style={styles.statBox}>\n//          <h3>Vaccinated Percentage</h3>\n//          <p>{data ? data.vaccinatedPercentage : 'Loading...'}</p>\n//        </div>\n//      </div>\n//\n//      {/* Vaccination Drives */}\n//      <h3>Upcoming Vaccination Drives</h3>\n//      {data && data.vaccinationDriveList.length > 0 ? (\n//        <table style={styles.table}>\n//          <thead>\n//            <tr>\n//              <th style={styles.th}>Drive Identifier</th>\n//              <th style={styles.th}>Title</th>\n//              <th style={styles.th}>Scheduled Date</th>\n//              <th style={styles.th}>Location</th>\n//              <th style={styles.th}>Available Doses</th>\n//              <th style={styles.th}>Applicable Classes</th>\n//              <th style={styles.th}>Edit</th>\n//            </tr>\n//          </thead>\n//          <tbody>\n//            {data.vaccinationDriveList.map((drive) => (\n//              <tr key={drive.id}>\n//                <td style={styles.td}>{drive.driveIdentifier}</td>\n//                <td style={styles.td}>{drive.title}</td>\n//                <td style={styles.td}>{new Date(drive.scheduledDate).toLocaleString()}</td>\n//                <td style={styles.td}>{drive.location}</td>\n//                <td style={styles.td}>{drive.availableDozes}</td>\n//                <td style={styles.td}>{drive.applicableClasses.join(', ')}</td>\n//                <td style={styles.td}>\n//                  <button style={styles.button} onClick={() => handleEditClick(drive)}>\n//                    Edit\n//                  </button>\n//                </td>\n//              </tr>\n//            ))}\n//          </tbody>\n//        </table>\n//      ) : (\n//        <p style={{ textAlign: 'center', marginTop: '1rem' }}>No vaccination drives available.</p>\n//      )}\n//\n//      {/* Edit Form */}\n//      {editingDrive && (\n//        <div style={{ marginTop: '2rem' }}>\n//          <h3>Edit Vaccination Drive</h3>\n//          <form onSubmit={handleSubmit}>\n//            <div>\n//              <label>Title</label>\n//              <input\n//                type=\"text\"\n//                name=\"title\"\n//                value={updatedDrive.title}\n//                onChange={handleInputChange}\n//                required\n//              />\n//            </div>\n//            <div>\n//              <label>Scheduled Date</label>\n//              <input\n//                type=\"datetime-local\"\n//                name=\"scheduledDate\"\n//                value={updatedDrive.scheduledDate}\n//                onChange={handleInputChange}\n//                required\n//              />\n//            </div>\n//            <div>\n//              <label>Location</label>\n//              <input\n//                type=\"text\"\n//                name=\"location\"\n//                value={updatedDrive.location}\n//                onChange={handleInputChange}\n//                required\n//              />\n//            </div>\n//            <div>\n//              <label>Available Doses</label>\n//              <input\n//                type=\"number\"\n//                name=\"availableDozes\"\n//                value={updatedDrive.availableDozes}\n//                onChange={handleInputChange}\n//                required\n//              />\n//            </div>\n//            <div>\n//              <label>Applicable Classes</label>\n//              <input\n//                type=\"text\"\n//                name=\"applicableClasses\"\n//                value={updatedDrive.applicableClasses.join(', ')}\n//                onChange={handleInputChange}\n//                required\n//              />\n//            </div>\n//            <button type=\"submit\" style={styles.button}>Update</button>\n//          </form>\n//        </div>\n//      )}\n//    </div>\n//  );\n//};\n//\n//export default Dashboard;\n//\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport NavigationMenu from './NavigationMenu';\nimport axios from '../api/axios';\n\nconst Dashboard = ({ token }) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [editingDrive, setEditingDrive] = useState(null);\n  const [updatedDrive, setUpdatedDrive] = useState({\n    title: '',\n    scheduledDate: '',\n    location: '',\n    availableDozes: '',\n    applicableClasses: []\n  });\n\n  useEffect(() => {\n    if (!token) {\n      setLoading(false);\n      return;\n    }\n\n    const fetchDashboard = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const res = await axios.post(\n          '/dashboard/overview',\n          {},\n          { headers: { Authorization: `Bearer ${token}` } }\n        );\n        setData(res.data);\n      } catch (e) {\n        console.error(e);\n        setError('Failed to load dashboard data.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchDashboard();\n  }, [token]);\n\n  const handleEditClick = (drive) => {\n    setEditingDrive(drive);\n    setUpdatedDrive({\n      title: drive.title,\n      scheduledDate: new Date(drive.scheduledDate).toISOString().slice(0, 16),\n      location: drive.location,\n      availableDoses: drive.availableDoses,\n      applicableClasses: drive.applicableClasses\n    });\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    if (name === 'applicableClasses') {\n      setUpdatedDrive((prev) => ({\n        ...prev,\n        applicableClasses: value.split(',').map(cls => cls.trim())\n      }));\n    } else {\n      setUpdatedDrive((prev) => ({ ...prev, [name]: value }));\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await axios.put(\n        `/vaccine-drive/update/${editingDrive.driveIdentifier}`,\n        updatedDrive,\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      const updatedList = data.vaccinationDriveList.map((drive) =>\n        drive.id === editingDrive.id ? { ...drive, ...updatedDrive } : drive\n      );\n      setData((prev) => ({ ...prev, vaccinationDriveList: updatedList }));\n      setEditingDrive(null);\n    } catch (e) {\n      console.error(e);\n      setError('Failed to update vaccination drive.');\n    }\n  };\n\n  const styles = {\n    container: { maxWidth: '900px', margin: '2rem auto', padding: '1.5rem', backgroundColor: '#fafafa', borderRadius: '8px', border: '1px solid #ddd' },\n    header: { textAlign: 'center', marginBottom: '2rem' },\n    statContainer: { display: 'flex', justifyContent: 'space-between', marginBottom: '2rem' },\n    statBox: { flex: '1', margin: '0 0.5rem', padding: '1rem', borderRadius: '8px', backgroundColor: 'white', border: '1px solid #ccc', textAlign: 'center' },\n    table: { width: '100%', borderCollapse: 'collapse', marginTop: '1rem' },\n    th: { border: '1px solid #ccc', padding: '10px', backgroundColor: '#f0f0f0', textAlign: 'left' },\n    td: { border: '1px solid #ccc', padding: '10px' },\n    button: { backgroundColor: '#007bff', color: 'white', padding: '8px 12px', border: 'none', cursor: 'pointer', borderRadius: '5px', fontWeight: 'bold' },\n    formGroup: { marginBottom: '1rem' },\n    input: { width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ccc', marginTop: '4px' }\n  };\n\n  return (\n    <div style={styles.container}>\n      <NavigationMenu onNavigate={() => {}} />\n      <h2 style={styles.header}>Dashboard Analytics</h2>\n\n      {loading && <p>Loading dashboard data...</p>}\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n\n      {data && (\n        <>\n          <div style={styles.statContainer}>\n            <div style={styles.statBox}>\n              <h3>Total Students</h3>\n              <p>{data.totalStudents}</p>\n            </div>\n            <div style={styles.statBox}>\n              <h3>Vaccinated Students</h3>\n              <p>{data.vaccinatedStudents}</p>\n            </div>\n            <div style={styles.statBox}>\n              <h3>Vaccinated Percentage</h3>\n              <p>{data.vaccinatedPercentage}%</p>\n            </div>\n          </div>\n\n          <h3>Upcoming Vaccination Drives</h3>\n          {data.vaccinationDriveList.length > 0 ? (\n            <table style={styles.table}>\n              <thead>\n                <tr>\n                  <th style={styles.th}>Drive Identifier</th>\n                  <th style={styles.th}>Title</th>\n                  <th style={styles.th}>Scheduled Date</th>\n                  <th style={styles.th}>Location</th>\n                  <th style={styles.th}>Available Doses</th>\n                  <th style={styles.th}>Applicable Classes</th>\n                  <th style={styles.th}>Edit</th>\n                </tr>\n              </thead>\n              <tbody>\n                {data.vaccinationDriveList.map((drive) => (\n                  <tr key={drive.id}>\n                    <td style={styles.td}>{drive.driveIdentifier}</td>\n                    <td style={styles.td}>{drive.title}</td>\n                    <td style={styles.td}>{new Date(drive.scheduledDate).toLocaleString()}</td>\n                    <td style={styles.td}>{drive.location}</td>\n                    <td style={styles.td}>{drive.availableDozes}</td>\n                    <td style={styles.td}>{drive.applicableClasses.join(', ')}</td>\n                    <td style={styles.td}>\n                      <button style={styles.button} onClick={() => handleEditClick(drive)}>\n                        Edit\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          ) : (\n            <p style={{ textAlign: 'center', marginTop: '1rem' }}>No vaccination drives available.</p>\n          )}\n        </>\n      )}\n\n      {/* Edit Form */}\n      {editingDrive && (\n        <div style={{ marginTop: '2rem' }}>\n          <h3>Edit Vaccination Drive</h3>\n          <form onSubmit={handleSubmit}>\n            <div style={styles.formGroup}>\n              <label>Title</label>\n              <input\n                type=\"text\"\n                name=\"title\"\n                value={updatedDrive.title}\n                onChange={handleInputChange}\n                style={styles.input}\n                required\n              />\n            </div>\n            <div style={styles.formGroup}>\n              <label>Scheduled Date</label>\n              <input\n                type=\"datetime-local\"\n                name=\"scheduledDate\"\n                value={updatedDrive.scheduledDate}\n                onChange={handleInputChange}\n                style={styles.input}\n                required\n              />\n            </div>\n            <div style={styles.formGroup}>\n              <label>Location</label>\n              <input\n                type=\"text\"\n                name=\"location\"\n                value={updatedDrive.location}\n                onChange={handleInputChange}\n                style={styles.input}\n                required\n              />\n            </div>\n            <div style={styles.formGroup}>\n              <label>Available Doses</label>\n              <input\n                type=\"number\"\n                name=\"availableDozes\"\n                value={updatedDrive.availableDozes}\n                onChange={handleInputChange}\n                style={styles.input}\n                required\n              />\n            </div>\n            <div style={styles.formGroup}>\n              <label>Applicable Classes (comma-separated)</label>\n              <input\n                type=\"text\"\n                name=\"applicableClasses\"\n                value={updatedDrive.applicableClasses.join(', ')}\n                onChange={handleInputChange}\n                style={styles.input}\n                required\n              />\n            </div>\n            <button type=\"submit\" style={styles.button}>Update Drive</button>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module"}